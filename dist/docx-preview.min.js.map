{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/custom-props-part.ts","webpack://docx/./src/document-props/custom-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/header-footer/elements.ts","webpack://docx/./src/header-footer/parts.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/notes/elements.ts","webpack://docx/./src/notes/parts.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/settings/settings-part.ts","webpack://docx/./src/settings/settings.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/vml/vml.ts","webpack://docx/./src/word-document.ts","webpack://docx/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://docx/webpack/bootstrap","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"jszip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(globalThis, (__WEBPACK_EXTERNAL_MODULE__626__) => {\nreturn ","import * as JSZip from \"jszip\";\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\nimport { splitPath } from \"../utils\";\nimport { parseRelationships, Relationship } from \"./relationship\";\n\nexport interface OpenXmlPackageOptions {\n    trimXmlDeclaration: boolean,\n    keepOrigin: boolean,\n}\n\nexport class OpenXmlPackage {\n    xmlParser: XmlParser = new XmlParser();\n\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\n    }\n\n    get(path: string): any {\n        return this._zip.files[normalizePath(path)];\n    }\n\n    update(path: string, content: any) {\n        this._zip.file(path, content);\n    }\n\n    static async load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\n        const zip = await JSZip.loadAsync(input);\n\t\treturn new OpenXmlPackage(zip, options);\n    }\n\n    save(type: any = \"blob\"): Promise<any>  {\n        return this._zip.generateAsync({ type });\n    }\n\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\n    }\n\n    async loadRelationships(path: string = null): Promise<Relationship[]> {\n        let relsPath = `_rels/.rels`;\n\n        if (path != null) {\n            const [f, fn] = splitPath(path);\n            relsPath = `${f}_rels/${fn}.rels`;\n        }\n\n        const txt = await this.load(relsPath);\n\t\treturn txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null;\n    }\n\n    /** @internal */\n    parseXmlDocument(txt: string): Document {\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\n    }\n}\n\nfunction normalizePath(path: string) {\n    return path.startsWith('/') ? path.substr(1) : path;\n}","import { serializeXmlString } from \"../parser/xml-parser\";\nimport { OpenXmlPackage } from \"./open-xml-package\";\nimport { Relationship } from \"./relationship\";\n\nexport class Part {\n    protected _xmlDocument: Document;\n\n    rels: Relationship[];\n\n    constructor(protected _package: OpenXmlPackage, public path: string) {\n    }\n\n    async load(): Promise<any> {\n\t\tthis.rels = await this._package.loadRelationships(this.path);\n\n\t\tconst xmlText = await this._package.load(this.path);\n\t\tconst xmlDoc = this._package.parseXmlDocument(xmlText);\n\n\t\tif (this._package.options.keepOrigin) {\n\t\t\tthis._xmlDocument = xmlDoc;\n\t\t}\n\n\t\tthis.parseXml(xmlDoc.firstElementChild);\n    }\n\n    save() {\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\n    }\n\n    protected parseXml(root: Element) {\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface Relationship {\n    id: string,\n    type: RelationshipTypes | string,\n    target: string\n    targetMode: \"\" | \"External\" | string \n}\n\nexport enum RelationshipTypes {\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\n}\n\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\n    return xml.elements(root).map(e => <Relationship>{\n        id: xml.attr(e, \"Id\"),\n        type: xml.attr(e, \"Type\"),\n        target: xml.attr(e, \"Target\"),\n        targetMode: xml.attr(e, \"TargetMode\")\n    });\n}","import {\n\tDomType, WmlTable, IDomNumbering,\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell,\n\tWmlTableRow, NumberingPicBullet, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\n} from './document/dom';\nimport { DocumentElement } from './document/document';\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\nimport { parseSectionProperties, SectionProperties } from './document/section';\nimport xml from './parser/xml-parser';\nimport { parseRunProperties, WmlRun } from './document/run';\nimport { parseBookmarkEnd, parseBookmarkStart } from './document/bookmarks';\nimport { IDomStyle, IDomSubStyle } from './document/style';\nimport { WmlFieldChar, WmlFieldSimple, WmlInstructionText } from './document/fields';\nimport { convertLength, LengthUsage, LengthUsageType } from './document/common';\nimport { parseVmlElement } from './vml/vml';\n\nexport var autos = {\n\tshd: \"inherit\",\n\tcolor: \"black\",\n\tborderColor: \"black\",\n\thighlight: \"transparent\"\n};\n\nconst supportedNamespaceURIs = [];\n\nconst mmlTagMap = {\n\t\"oMath\": DomType.MmlMath,\n\t\"oMathPara\": DomType.MmlMathParagraph,\n\t\"f\": DomType.MmlFraction,\n\t\"func\": DomType.MmlFunction,\n\t\"fName\": DomType.MmlFunctionName,\n\t\"num\": DomType.MmlNumerator,\n\t\"den\": DomType.MmlDenominator,\n\t\"rad\": DomType.MmlRadical,\n\t\"deg\": DomType.MmlDegree,\n\t\"e\": DomType.MmlBase,\n\t\"sSup\": DomType.MmlSuperscript,\n\t\"sSub\": DomType.MmlSubscript,\n\t\"sPre\": DomType.MmlPreSubSuper,\n\t\"sup\": DomType.MmlSuperArgument,\n\t\"sub\": DomType.MmlSubArgument,\n\t\"d\": DomType.MmlDelimiter,\n\t\"nary\": DomType.MmlNary,\n\t\"eqArr\": DomType.MmlEquationArray,\n\t\"lim\": DomType.MmlLimit,\n\t\"limLow\": DomType.MmlLimitLower,\n\t\"m\": DomType.MmlMatrix,\n\t\"mr\": DomType.MmlMatrixRow,\n\t\"box\": DomType.MmlBox,\n\t\"bar\": DomType.MmlBar,\n\t\"groupChr\": DomType.MmlGroupChar\n}\n\nexport interface DocumentParserOptions {\n\tignoreWidth: boolean;\n\tdebug: boolean;\n}\n\nexport class DocumentParser {\n\toptions: DocumentParserOptions;\n\n\tconstructor(options?: Partial<DocumentParserOptions>) {\n\t\tthis.options = {\n\t\t\tignoreWidth: false,\n\t\t\tdebug: false,\n\t\t\t...options\n\t\t};\n\t}\n\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\n\t\tvar result = [];\n\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\n\t\t\tconst node = new elemClass();\n\t\t\tnode.id = xml.attr(el, \"id\");\n\t\t\tnode.noteType = xml.attr(el, \"type\");\n\t\t\tnode.children = this.parseBodyElements(el);\n\t\t\tresult.push(node);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\n\t\tvar xbody = xml.element(xmlDoc, \"body\");\n\t\tvar background = xml.element(xmlDoc, \"background\");\n\t\tvar sectPr = xml.element(xbody, \"sectPr\");\n\n\t\treturn {\n\t\t\ttype: DomType.Document,\n\t\t\tchildren: this.parseBodyElements(xbody),\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : {} as SectionProperties,\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\n\t\t};\n\t}\n\n\tparseBackground(elem: Element): any {\n\t\tvar result = {};\n\t\tvar color = xmlUtil.colorAttr(elem, \"color\");\n\n\t\tif (color) {\n\t\t\tresult[\"background-color\"] = color;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseBodyElements(element: Element): OpenXmlElement[] {\n\t\tvar children = [];\n\n\t\tfor (let elem of xml.elements(element)) {\n\t\t\tswitch (elem.localName) {\n\t\t\t\tcase \"p\":\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tbl\":\n\t\t\t\t\tchildren.push(this.parseTable(elem));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sdt\":\n\t\t\t\t\tchildren.push(...this.parseSdt(elem, e => this.parseBodyElements(e)));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn children;\n\t}\n\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\n\t\tvar result = [];\n\n\t\txmlUtil.foreach(xstyles, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"style\":\n\t\t\t\t\tresult.push(this.parseStyle(n));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"docDefaults\":\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseDefaultStyles(node: Element): IDomStyle {\n\t\tvar result = <IDomStyle>{\n\t\t\tid: null,\n\t\t\tname: null,\n\t\t\ttarget: null,\n\t\t\tbasedOn: null,\n\t\t\tstyles: []\n\t\t};\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"rPrDefault\":\n\t\t\t\t\tvar rPr = xml.element(c, \"rPr\");\n\n\t\t\t\t\tif (rPr)\n\t\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\t\ttarget: \"span\",\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {})\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pPrDefault\":\n\t\t\t\t\tvar pPr = xml.element(c, \"pPr\");\n\n\t\t\t\t\tif (pPr)\n\t\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\t\ttarget: \"p\",\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {})\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseStyle(node: Element): IDomStyle {\n\t\tvar result = <IDomStyle>{\n\t\t\tid: xml.attr(node, \"styleId\"),\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\n\t\t\tname: null,\n\t\t\ttarget: null,\n\t\t\tbasedOn: null,\n\t\t\tstyles: [],\n\t\t\tlinked: null\n\t\t};\n\n\t\tswitch (xml.attr(node, \"type\")) {\n\t\t\tcase \"paragraph\": result.target = \"p\"; break;\n\t\t\tcase \"table\": result.target = \"table\"; break;\n\t\t\tcase \"character\": result.target = \"span\"; break;\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\n\t\t}\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"basedOn\":\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"name\":\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"link\":\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"next\":\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aliases\":\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"p\",\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"span\",\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblStylePr\":\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\n\t\t\t\t\t\tresult.styles.push(s);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rsid\":\n\t\t\t\tcase \"qFormat\":\n\t\t\t\tcase \"hidden\":\n\t\t\t\tcase \"semiHidden\":\n\t\t\t\tcase \"unhideWhenUsed\":\n\t\t\t\tcase \"autoRedefine\":\n\t\t\t\tcase \"uiPriority\":\n\t\t\t\t\t//TODO: ignore\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableStyle(node: Element): IDomSubStyle[] {\n\t\tvar result = [];\n\n\t\tvar type = xml.attr(node, \"type\");\n\t\tvar selector = \"\";\n\t\tvar modificator = \"\";\n\n\t\tswitch (type) {\n\t\t\tcase \"firstRow\":\n\t\t\t\tmodificator = \".first-row\";\n\t\t\t\tselector = \"tr.first-row td\";\n\t\t\t\tbreak;\n\t\t\tcase \"lastRow\":\n\t\t\t\tmodificator = \".last-row\";\n\t\t\t\tselector = \"tr.last-row td\";\n\t\t\t\tbreak;\n\t\t\tcase \"firstCol\":\n\t\t\t\tmodificator = \".first-col\";\n\t\t\t\tselector = \"td.first-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"lastCol\":\n\t\t\t\tmodificator = \".last-col\";\n\t\t\t\tselector = \"td.last-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band1Vert\":\n\t\t\t\tmodificator = \":not(.no-vband)\";\n\t\t\t\tselector = \"td.odd-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band2Vert\":\n\t\t\t\tmodificator = \":not(.no-vband)\";\n\t\t\t\tselector = \"td.even-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band1Horz\":\n\t\t\t\tmodificator = \":not(.no-hband)\";\n\t\t\t\tselector = \"tr.odd-row\";\n\t\t\t\tbreak;\n\t\t\tcase \"band2Horz\":\n\t\t\t\tmodificator = \":not(.no-hband)\";\n\t\t\t\tselector = \"tr.even-row\";\n\t\t\t\tbreak;\n\t\t\tdefault: return [];\n\t\t}\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: `${selector} p`,\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: `${selector} span`,\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\n\t\tvar result = [];\n\t\tvar mapping = {};\n\t\tvar bullets = [];\n\n\t\txmlUtil.foreach(xnums, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"abstractNum\":\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets)\n\t\t\t\t\t\t.forEach(x => result.push(x));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"numPicBullet\":\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"num\":\n\t\t\t\t\tvar numId = xml.attr(n, \"numId\");\n\t\t\t\t\tvar abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\n\t\t\t\t\tmapping[abstractNumId] = numId;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tresult.forEach(x => x.id = mapping[x.id]);\n\n\t\treturn result;\n\t}\n\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\n\t\tvar pict = xml.element(elem, \"pict\");\n\t\tvar shape = pict && xml.element(pict, \"shape\");\n\t\tvar imagedata = shape && xml.element(shape, \"imagedata\");\n\n\t\treturn imagedata ? {\n\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\n\t\t\tsrc: xml.attr(imagedata, \"id\"),\n\t\t\tstyle: xml.attr(shape, \"style\")\n\t\t} : null;\n\t}\n\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\n\t\tvar result = [];\n\t\tvar id = xml.attr(node, \"abstractNumId\");\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"lvl\":\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\n\t\tvar result: IDomNumbering = {\n\t\t\tid: id,\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\n\t\t\tstart: 1,\n\t\t\tpStyleName: undefined,\n\t\t\tpStyle: {},\n\t\t\trStyle: {},\n\t\t\tsuff: \"tab\"\n\t\t};\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"start\":\n\t\t\t\t\tresult.start = xml.intAttr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lvlPicBulletId\":\n\t\t\t\t\tvar id = xml.intAttr(n, \"val\");\n\t\t\t\t\tresult.bullet = bullets.find(x => x.id == id);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lvlText\":\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pStyle\":\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"numFmt\":\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"suff\":\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseSdt(node: Element, parser: Function): OpenXmlElement[] {\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\n\t\treturn sdtContent ? parser(sdtContent) : [];\n\t}\n\n\tparseInserted(node: Element, parentParser: Function): OpenXmlElement {\n\t\treturn <OpenXmlElement>{\n\t\t\ttype: DomType.Inserted,\n\t\t\tchildren: parentParser(node)?.children ?? []\n\t\t};\n\t}\n\n\tparseDeleted(node: Element, parentParser: Function): OpenXmlElement {\n\t\treturn <OpenXmlElement>{\n\t\t\ttype: DomType.Deleted,\n\t\t\tchildren: parentParser(node)?.children ?? []\n\t\t};\n\t}\n\n\tparseParagraph(node: Element): OpenXmlElement {\n\t\tvar result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\n\n\t\tfor (let el of xml.elements(node)) {\n\t\t\tswitch (el.localName) {\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tthis.parseParagraphProperties(el, result);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"r\":\n\t\t\t\t\tresult.children.push(this.parseRun(el, result));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hyperlink\":\n\t\t\t\t\tresult.children.push(this.parseHyperlink(el, result));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bookmarkStart\":\n\t\t\t\t\tresult.children.push(parseBookmarkStart(el, xml));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bookmarkEnd\":\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(el, xml));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"oMath\":\n\t\t\t\tcase \"oMathPara\":\n\t\t\t\t\tresult.children.push(this.parseMathElement(el));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sdt\":\n\t\t\t\t\tresult.children.push(...this.parseSdt(el, e => this.parseParagraph(e).children));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ins\":\n\t\t\t\t\tresult.children.push(this.parseInserted(el, e => this.parseParagraph(e)));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"del\":\n\t\t\t\t\tresult.children.push(this.parseDeleted(el, e => this.parseParagraph(e)));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\n\t\tthis.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\n\t\t\tif (parseParagraphProperty(c, paragraph, xml))\n\t\t\t\treturn true;\n\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"pStyle\":\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"framePr\":\n\t\t\t\t\tthis.parseFrame(c, paragraph);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\t//TODO ignore\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\n\t\tvar dropCap = xml.attr(node, \"dropCap\");\n\n\t\tif (dropCap == \"drop\")\n\t\t\tparagraph.cssStyle[\"float\"] = \"left\";\n\t}\n\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\n\t\tvar result: WmlHyperlink = <WmlHyperlink>{ type: DomType.Hyperlink, parent: parent, children: [] };\n\t\tvar anchor = xml.attr(node, \"anchor\");\n\t\tvar relId = xml.attr(node, \"id\");\n\n\t\tif (anchor)\n\t\t\tresult.href = \"#\" + anchor;\n\n\t\tif (relId)\n\t\t\tresult.id = relId;\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"r\":\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun {\n\t\tvar result: WmlRun = <WmlRun>{ type: DomType.Run, parent: parent, children: [] };\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tc = this.checkAlternateContent(c);\n\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"t\":\n\t\t\t\t\tresult.children.push(<WmlText>{\n\t\t\t\t\t\ttype: DomType.Text,\n\t\t\t\t\t\ttext: c.textContent\n\t\t\t\t\t});//.replace(\" \", \"\\u00A0\"); // TODO\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"delText\":\n\t\t\t\t\tresult.children.push(<WmlText>{\n\t\t\t\t\t\ttype: DomType.DeletedText,\n\t\t\t\t\t\ttext: c.textContent\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"fldSimple\":\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\n\t\t\t\t\t\ttype: DomType.SimpleField,\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"instrText\":\n\t\t\t\t\tresult.fieldRun = true;\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\n\t\t\t\t\t\ttype: DomType.Instruction,\n\t\t\t\t\t\ttext: c.textContent\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"fldChar\":\n\t\t\t\t\tresult.fieldRun = true;\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\n\t\t\t\t\t\ttype: DomType.ComplexField,\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"noBreakHyphen\":\n\t\t\t\t\tresult.children.push({ type: DomType.NoBreakHyphen });\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"br\":\n\t\t\t\t\tresult.children.push(<WmlBreak>{\n\t\t\t\t\t\ttype: DomType.Break,\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\"\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lastRenderedPageBreak\":\n\t\t\t\t\tresult.children.push(<WmlBreak>{\n\t\t\t\t\t\ttype: DomType.Break,\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\"\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sym\":\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\n\t\t\t\t\t\ttype: DomType.Symbol,\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\n\t\t\t\t\t\tchar: xml.attr(c, \"char\")\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tab\":\n\t\t\t\t\tresult.children.push({ type: DomType.Tab });\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"footnoteReference\":\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"endnoteReference\":\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"drawing\":\n\t\t\t\t\tlet d = this.parseDrawing(c);\n\n\t\t\t\t\tif (d)\n\t\t\t\t\t\tresult.children = [d];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pict\":\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tthis.parseRunProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseMathElement(elem: Element): OpenXmlElement {\n\t\tconst propsTag = `${elem.localName}Pr`;\n\t\tconst result = { type: mmlTagMap[elem.localName], children: [] } as OpenXmlElement;\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tconst childType = mmlTagMap[el.localName];\n\n\t\t\tif (childType) {\n\t\t\t\tresult.children.push(this.parseMathElement(el));\n\t\t\t} else if (el.localName == \"r\") {\n\t\t\t\tvar run = this.parseRun(el);\n\t\t\t\trun.type = DomType.MmlRun;\n\t\t\t\tresult.children.push(run);\n\t\t\t} else if (el.localName == propsTag) {\n\t\t\t\tresult.props = this.parseMathProperies(el);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseMathProperies(elem: Element): Record<string, any> {\n\t\tconst result: Record<string, any> = {};\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tswitch (el.localName) {\n\t\t\t\tcase \"chr\": result.char = xml.attr(el, \"val\"); break;\n\t\t\t\tcase \"vertJc\": result.verticalJustification = xml.attr(el, \"val\"); break;\n\t\t\t\tcase \"pos\": result.position = xml.attr(el, \"val\"); break;\n\t\t\t\tcase \"degHide\": result.hideDegree = xml.boolAttr(el, \"val\"); break;\n\t\t\t\tcase \"begChr\": result.beginChar = xml.attr(el, \"val\"); break;\n\t\t\t\tcase \"endChr\": result.endChar = xml.attr(el, \"val\"); break;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseRunProperties(elem: Element, run: WmlRun) {\n\t\tthis.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"rStyle\":\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vertAlign\":\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseVmlPicture(elem: Element): OpenXmlElement {\n\t\tconst result = { type: DomType.VmlPicture, children: [] };\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tconst child = parseVmlElement(el, this);\n\t\t\tchild && result.children.push(child);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tcheckAlternateContent(elem: Element): Element {\n\t\tif (elem.localName != 'AlternateContent')\n\t\t\treturn elem;\n\n\t\tvar choice = xml.element(elem, \"Choice\");\n\n\t\tif (choice) {\n\t\t\tvar requires = xml.attr(choice, \"Requires\");\n\t\t\tvar namespaceURI = elem.lookupNamespaceURI(requires);\n\n\t\t\tif (supportedNamespaceURIs.includes(namespaceURI))\n\t\t\t\treturn choice.firstElementChild;\n\t\t}\n\n\t\treturn xml.element(elem, \"Fallback\")?.firstElementChild;\n\t}\n\n\tparseDrawing(node: Element): OpenXmlElement {\n\t\tfor (var n of xml.elements(node)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"inline\":\n\t\t\t\tcase \"anchor\":\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\n\t\t\t}\n\t\t}\n\t}\n\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\n\t\tvar result = <OpenXmlElement>{ type: DomType.Drawing, children: [], cssStyle: {} };\n\t\tvar isAnchor = node.localName == \"anchor\";\n\n\t\t//TODO\n\t\t// result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\n\t\t// result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\n\t\t// result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\n\t\t// result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\n\n\t\tlet wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null;\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\n\n\t\tlet posX = { relative: \"page\", align: \"left\", offset: \"0\" };\n\t\tlet posY = { relative: \"page\", align: \"top\", offset: \"0\" };\n\n\t\tfor (var n of xml.elements(node)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"simplePos\":\n\t\t\t\t\tif (simplePos) {\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"extent\":\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"positionH\":\n\t\t\t\tcase \"positionV\":\n\t\t\t\t\tif (!simplePos) {\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\n\t\t\t\t\t\tvar alignNode = xml.element(n, \"align\");\n\t\t\t\t\t\tvar offsetNode = xml.element(n, \"posOffset\");\n\n\t\t\t\t\t\tpos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\n\n\t\t\t\t\t\tif (alignNode)\n\t\t\t\t\t\t\tpos.align = alignNode.textContent;\n\n\t\t\t\t\t\tif (offsetNode)\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wrapTopAndBottom\":\n\t\t\t\t\twrapType = \"wrapTopAndBottom\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wrapNone\":\n\t\t\t\t\twrapType = \"wrapNone\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"graphic\":\n\t\t\t\t\tvar g = this.parseGraphic(n);\n\n\t\t\t\t\tif (g)\n\t\t\t\t\t\tresult.children.push(g);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (wrapType == \"wrapTopAndBottom\") {\n\t\t\tresult.cssStyle['display'] = 'block';\n\n\t\t\tif (posX.align) {\n\t\t\t\tresult.cssStyle['text-align'] = posX.align;\n\t\t\t\tresult.cssStyle['width'] = \"100%\";\n\t\t\t}\n\t\t}\n\t\telse if (wrapType == \"wrapNone\") {\n\t\t\tresult.cssStyle['display'] = 'block';\n\t\t\tresult.cssStyle['position'] = 'relative';\n\t\t\tresult.cssStyle[\"width\"] = \"0px\";\n\t\t\tresult.cssStyle[\"height\"] = \"0px\";\n\n\t\t\tif (posX.offset)\n\t\t\t\tresult.cssStyle[\"left\"] = posX.offset;\n\t\t\tif (posY.offset)\n\t\t\t\tresult.cssStyle[\"top\"] = posY.offset;\n\t\t}\n\t\telse if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\n\t\t\tresult.cssStyle[\"float\"] = posX.align;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseGraphic(elem: Element): OpenXmlElement {\n\t\tvar graphicData = xml.element(elem, \"graphicData\");\n\n\t\tfor (let n of xml.elements(graphicData)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"pic\":\n\t\t\t\t\treturn this.parsePicture(n);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tparsePicture(elem: Element): IDomImage {\n\t\tvar result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\n\t\tvar blipFill = xml.element(elem, \"blipFill\");\n\t\tvar blip = xml.element(blipFill, \"blip\");\n\n\t\tresult.src = xml.attr(blip, \"embed\");\n\n\t\tvar spPr = xml.element(elem, \"spPr\");\n\t\tvar xfrm = xml.element(spPr, \"xfrm\");\n\n\t\tresult.cssStyle[\"position\"] = \"relative\";\n\n\t\tfor (var n of xml.elements(xfrm)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"ext\":\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"off\":\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseTable(node: Element): WmlTable {\n\t\tvar result: WmlTable = { type: DomType.Table, children: [] };\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tr\":\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblGrid\":\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\t\tthis.parseTableProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableColumns(node: Element): WmlTableColumn[] {\n\t\tvar result = [];\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"gridCol\":\n\t\t\t\t\tresult.push({ width: xml.lengthAttr(n, \"w\") });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableProperties(elem: Element, table: WmlTable) {\n\t\ttable.cssStyle = {};\n\t\ttable.cellStyle = {};\n\n\t\tthis.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tblStyle\":\n\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblLook\":\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblpPr\":\n\t\t\t\t\tthis.parseTablePosition(c, table);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblStyleColBandSize\":\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblStyleRowBandSize\":\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tswitch (table.cssStyle[\"text-align\"]) {\n\t\t\tcase \"center\":\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"right\":\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tparseTablePosition(node: Element, table: WmlTable) {\n\t\tvar topFromText = xml.lengthAttr(node, \"topFromText\");\n\t\tvar bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\n\t\tvar rightFromText = xml.lengthAttr(node, \"rightFromText\");\n\t\tvar leftFromText = xml.lengthAttr(node, \"leftFromText\");\n\n\t\ttable.cssStyle[\"float\"] = 'left';\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\n\t}\n\n\tparseTableRow(node: Element): WmlTableRow {\n\t\tvar result: WmlTableRow = { type: DomType.Row, children: [] };\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tc\":\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"trPr\":\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblHeader\":\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseTableCell(node: Element): OpenXmlElement {\n\t\tvar result: WmlTableCell = { type: DomType.Cell, children: [] };\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tbl\":\n\t\t\t\t\tresult.children.push(this.parseTable(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"p\":\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"gridSpan\":\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vMerge\":\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\n\t\tstyle = style || {};\n\n\t\txmlUtil.foreach(elem, c => {\n\t\t\tif (handler?.(c))\n\t\t\t\treturn;\n\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"jc\":\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"textAlignment\":\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"color\":\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sz\":\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"shd\":\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"highlight\":\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vertAlign\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"position\":\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcW\":\n\t\t\t\t\tif (this.options.ignoreWidth)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblW\":\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"trHeight\":\n\t\t\t\t\tthis.parseTrHeight(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"strike\":\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"b\":\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"caps\":\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"smallCaps\":\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"u\":\n\t\t\t\t\tthis.parseUnderline(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ind\":\n\t\t\t\tcase \"tblInd\":\n\t\t\t\t\tthis.parseIndentation(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rFonts\":\n\t\t\t\t\tthis.parseFont(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblBorders\":\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblCellSpacing\":\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pBdr\":\n\t\t\t\t\tthis.parseBorderProperties(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bdr\":\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcBorders\":\n\t\t\t\t\tthis.parseBorderProperties(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vanish\":\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true))\n\t\t\t\t\t\tstyle[\"display\"] = \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kern\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"noWrap\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblCellMar\":\n\t\t\t\tcase \"tcMar\":\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblLayout\":\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vAlign\":\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"spacing\":\n\t\t\t\t\tif (elem.localName == \"pPr\")\n\t\t\t\t\t\tthis.parseSpacing(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wordWrap\":\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"suppressAutoHyphens\":\n\t\t\t\t\tstyle[\"hyphens\"] = xml.boolAttr(c, \"val\", true) ? \"none\" : \"auto\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lang\":\n\t\t\t\t\tstyle[\"$lang\"] = xml.attr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bCs\":\n\t\t\t\tcase \"iCs\":\n\t\t\t\tcase \"szCs\":\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\n\t\t\t\tcase \"outlineLvl\": //TODO\n\t\t\t\tcase \"contextualSpacing\": //TODO\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore\n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore\n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\n\t\t\t\tcase \"noProof\": //ignore spellcheck\n\t\t\t\t\t//TODO ignore\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.options.debug)\n\t\t\t\t\t\tconsole.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}`);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn style;\n\t}\n\n\tparseUnderline(node: Element, style: Record<string, string>) {\n\t\tvar val = xml.attr(node, \"val\");\n\n\t\tif (val == null)\n\t\t\treturn;\n\n\t\tswitch (val) {\n\t\t\tcase \"dash\":\n\t\t\tcase \"dashDotDotHeavy\":\n\t\t\tcase \"dashDotHeavy\":\n\t\t\tcase \"dashedHeavy\":\n\t\t\tcase \"dashLong\":\n\t\t\tcase \"dashLongHeavy\":\n\t\t\tcase \"dotDash\":\n\t\t\tcase \"dotDotDash\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"dotted\":\n\t\t\tcase \"dottedHeavy\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"double\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"single\":\n\t\t\tcase \"thick\":\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"wave\":\n\t\t\tcase \"wavyDouble\":\n\t\t\tcase \"wavyHeavy\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"words\":\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"none\":\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar col = xmlUtil.colorAttr(node, \"color\");\n\n\t\tif (col)\n\t\t\tstyle[\"text-decoration-color\"] = col;\n\t}\n\n\tparseFont(node: Element, style: Record<string, string>) {\n\t\tvar ascii = xml.attr(node, \"ascii\");\n\t\tvar asciiTheme = values.themeValue(node, \"asciiTheme\");\n\n\t\tvar fonts = [ascii, asciiTheme].filter(x => x).join(', ');\n\n\t\tif (fonts.length > 0)\n\t\t\tstyle[\"font-family\"] = fonts;\n\t}\n\n\tparseIndentation(node: Element, style: Record<string, string>) {\n\t\tvar firstLine = xml.lengthAttr(node, \"firstLine\");\n\t\tvar hanging = xml.lengthAttr(node, \"hanging\");\n\t\tvar left = xml.lengthAttr(node, \"left\");\n\t\tvar start = xml.lengthAttr(node, \"start\");\n\t\tvar right = xml.lengthAttr(node, \"right\");\n\t\tvar end = xml.lengthAttr(node, \"end\");\n\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\n\t\tif (left || start) style[\"margin-left\"] = left || start;\n\t\tif (right || end) style[\"margin-right\"] = right || end;\n\t}\n\n\tparseSpacing(node: Element, style: Record<string, string>) {\n\t\tvar before = xml.lengthAttr(node, \"before\");\n\t\tvar after = xml.lengthAttr(node, \"after\");\n\t\tvar line = xml.intAttr(node, \"line\", null);\n\t\tvar lineRule = xml.attr(node, \"lineRule\");\n\n\t\tif (before) style[\"margin-top\"] = before;\n\t\tif (after) style[\"margin-bottom\"] = after;\n\n\t\tif (line !== null) {\n\t\t\tswitch (lineRule) {\n\t\t\t\tcase \"auto\":\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"atLeast\":\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"left\":\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"right\":\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"top\":\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bottom\":\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\tparseTrHeight(node: Element, output: Record<string, string>) {\n\t\tswitch (xml.attr(node, \"hRule\")) {\n\t\t\tcase \"exact\":\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"atLeast\":\n\t\t\tdefault:\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\n\t\t\t\t// min-height doesn't work for tr\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"start\":\n\t\t\t\tcase \"left\":\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"end\":\n\t\t\t\tcase \"right\":\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"top\":\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bottom\":\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst knownColors = ['black', 'blue', 'cyan', 'darkBlue', 'darkCyan', 'darkGray', 'darkGreen', 'darkMagenta', 'darkRed', 'darkYellow', 'green', 'lightGray', 'magenta', 'none', 'red', 'white', 'yellow'];\n\nclass xmlUtil {\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\tlet n = node.childNodes[i];\n\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE)\n\t\t\t\tcb(<Element>n);\n\t\t}\n\t}\n\n\tstatic colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\n\t\tvar v = xml.attr(node, attrName);\n\n\t\tif (v) {\n\t\t\tif (v == \"auto\") {\n\t\t\t\treturn autoColor;\n\t\t\t} else if (knownColors.includes(v)) {\n\t\t\t\treturn v;\n\t\t\t}\n\n\t\t\treturn `#${v}`;\n\t\t}\n\n\t\tvar themeColor = xml.attr(node, \"themeColor\");\n\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\n\t}\n\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\n\t\treturn convertLength(node.textContent, type);\n\t}\n}\n\nclass values {\n\tstatic themeValue(c: Element, attr: string) {\n\t\tvar val = xml.attr(c, attr);\n\t\treturn val ? `var(--docx-${val}-font)` : null;\n\t}\n\n\tstatic valueOfSize(c: Element, attr: string) {\n\t\tvar type = LengthUsage.Dxa;\n\n\t\tswitch (xml.attr(c, \"type\")) {\n\t\t\tcase \"dxa\": break;\n\t\t\tcase \"pct\": type = LengthUsage.Percent; break;\n\t\t\tcase \"auto\": return \"auto\";\n\t\t}\n\n\t\treturn xml.lengthAttr(c, attr, type);\n\t}\n\n\tstatic valueOfMargin(c: Element) {\n\t\treturn xml.lengthAttr(c, \"w\");\n\t}\n\n\tstatic valueOfBorder(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tif (type == \"nil\")\n\t\t\treturn \"none\";\n\n\t\tvar color = xmlUtil.colorAttr(c, \"color\");\n\t\tvar size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\n\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\n\t}\n\n\tstatic valueOfTblLayout(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\n\t}\n\n\tstatic classNameOfCnfStyle(c: Element) {\n\t\tconst val = xml.attr(c, \"val\");\n\t\tconst classes = [\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col',\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row',\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\n\t\t];\n\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\n\t}\n\n\tstatic valueOfJc(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"start\":\n\t\t\tcase \"left\": return \"left\";\n\t\t\tcase \"center\": return \"center\";\n\t\t\tcase \"end\":\n\t\t\tcase \"right\": return \"right\";\n\t\t\tcase \"both\": return \"justify\";\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"subscript\": return \"sub\";\n\t\t\tcase \"superscript\": return asTagName ? \"sup\" : \"super\";\n\t\t}\n\n\t\treturn asTagName ? null : type;\n\t}\n\n\tstatic valueOfTextAlignment(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"auto\":\n\t\t\tcase \"baseline\": return \"baseline\";\n\t\t\tcase \"top\": return \"top\";\n\t\t\tcase \"center\": return \"middle\";\n\t\t\tcase \"bottom\": return \"bottom\";\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tstatic addSize(a: string, b: string): string {\n\t\tif (a == null) return b;\n\t\tif (b == null) return a;\n\n\t\treturn `calc(${a} + ${b})`; //TODO\n\t}\n\n\tstatic classNameOftblLook(c: Element) {\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\n\t\tlet className = \"\";\n\n\t\tif (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\n\t\tif (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\n\t\tif (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\n\t\tif (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\n\t\tif (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\n\t\tif (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\n\n\t\treturn className.trim();\n\t}\n}\n","import { Part } from \"../common/part\";\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\n\nexport class CorePropsPart extends Part {\n    props: CorePropsDeclaration;\n\n    parseXml(root: Element) {\n        this.props = parseCoreProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface CorePropsDeclaration {\n    title: string,\n    description: string,\n    subject: string,\n    creator: string,\n    keywords: string,\n    language: string,\n    lastModifiedBy: string,\n    revision: number,\n}\n\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\n    const result = <CorePropsDeclaration>{};\n\n    for (let el of xmlParser.elements(root)) {\n        switch (el.localName) {\n            case \"title\": result.title = el.textContent; break;\n            case \"description\": result.description = el.textContent; break;\n            case \"subject\": result.subject = el.textContent; break;\n            case \"creator\": result.creator = el.textContent; break;\n            case \"keywords\": result.keywords = el.textContent; break;\n            case \"language\": result.language = el.textContent; break;\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\n        }\n    }\n\n    return result;\n}","import { Part } from \"../common/part\";\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\n\nexport class CustomPropsPart extends Part {\n    props: CustomProperty[];\n\n    parseXml(root: Element) {\n        this.props = parseCustomProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface CustomProperty {\n\tformatId: string;\n\tname: string;\n\ttype: string;\n\tvalue: string;\n}\n\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\n\treturn xml.elements(root, \"property\").map(e => {\n\t\tconst firstChild = e.firstChild;\n\n\t\treturn {\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\n\t\t\tname: xml.attr(e, \"name\"),\n\t\t\ttype: firstChild.nodeName,\n\t\t\tvalue: firstChild.textContent\n\t\t};\n\t});\n}","import { Part } from \"../common/part\";\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\n\nexport class ExtendedPropsPart extends Part {\n    props: ExtendedPropsDeclaration;\n\n    parseXml(root: Element) {\n        this.props = parseExtendedProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface ExtendedPropsDeclaration {\n    template: string,\n    totalTime: number,\n    pages: number,\n    words: number,\n    characters: number,\n    application: string,\n    lines: number,\n    paragraphs: number,\n    company: string,\n    appVersion: string\n}\n\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\n    const result = <ExtendedPropsDeclaration>{\n\n    };\n\n    for (let el of xmlParser.elements(root)) {\n        switch (el.localName) {\n            case \"Template\":\n                result.template = el.textContent;\n                break;\n            case \"Pages\":\n                result.pages = safeParseToInt(el.textContent);\n                break;\n            case \"Words\":\n                result.words = safeParseToInt(el.textContent);\n                break;\n            case \"Characters\":\n                result.characters = safeParseToInt(el.textContent);\n                break;\n            case \"Application\":\n                result.application = el.textContent;\n                break;\n            case \"Lines\":\n                result.lines = safeParseToInt(el.textContent);\n                break;\n            case \"Paragraphs\":\n                result.paragraphs = safeParseToInt(el.textContent);\n                break;\n            case \"Company\":\n                result.company = el.textContent;\n                break;\n            case \"AppVersion\":\n                result.appVersion = el.textContent;\n                break;\n        }\n    }\n\n    return result;\n}\n\nfunction safeParseToInt(value: string): number {\n    if (typeof value === 'undefined')\n        return;\n    return parseInt(value);\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { DomType, OpenXmlElement } from \"./dom\";\n\nexport interface WmlBookmarkStart extends OpenXmlElement {\n    id: string;\n    name: string;\n    colFirst: number;\n    colLast: number;\n}\n\nexport interface WmlBookmarkEnd extends OpenXmlElement {\n    id: string;\n}\n\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\n    return {\n        type: DomType.BookmarkStart,\n        id: xml.attr(elem, \"id\"),\n        name: xml.attr(elem, \"name\"),\n        colFirst: xml.intAttr(elem, \"colFirst\"),\n        colLast: xml.intAttr(elem, \"colLast\")\n    }\n}\n\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\n    return {\n        type: DomType.BookmarkEnd,\n        id: xml.attr(elem, \"id\")\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { Length, LengthUsage } from \"./common\";\n\nexport interface Border {\n    color: string;\n    type: string;\n    size: Length;\n    frame: boolean;\n    shadow: boolean;\n    offset: Length;\n}\n\nexport interface Borders {\n    top: Border;\n    left: Border;\n    right: Border;\n    bottom: Border;\n}\n\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\n    return {\n        type: xml.attr(elem, \"val\"),\n        color: xml.attr(elem, \"color\"),\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\n        frame: xml.boolAttr(elem, 'frame'),\n        shadow: xml.boolAttr(elem, 'shadow')\n    };\n}\n\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\n    var result = <Borders>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"left\": result.left = parseBorder(e, xml); break;\n            case \"top\": result.top = parseBorder(e, xml); break;\n            case \"right\": result.right = parseBorder(e, xml); break;\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\n        }\n    }\n\n    return result;\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport const ns = {\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\n\tcompatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\",\n\tmath: \"http://schemas.openxmlformats.org/officeDocument/2006/math\"\n}\n\nexport type LengthType = \"px\" | \"pt\" | \"%\" | \"\";\nexport type Length = string;\n\nexport interface Font {\n    name: string;\n    family: string;\n}\n\nexport interface CommonProperties {\n    fontSize: Length;\n    color: string;\n}\n\nexport type LengthUsageType = { mul: number, unit: LengthType };\n\nexport const LengthUsage: Record<string, LengthUsageType> = {\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\n    FontSize: { mul: 0.5, unit: \"pt\" },\n    Border: { mul: 0.125, unit: \"pt\" },\n    Point: { mul: 1, unit: \"pt\" },\n    Percent: { mul: 0.02, unit: \"%\" },\n    LineHeight: { mul: 1 / 240, unit: \"\" },\n    VmlEmu: { mul: 1 / 12700, unit: \"\" },\n}\n\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): string {\n    //\"simplified\" docx documents use pt's as units\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\n        return val;\n    }\n\n\t// Border 设置最小值\n\tlet num = parseInt(val) * usage.mul\n\tif (usage === LengthUsage.Border) {\n\t\tnum = Math.max(num, 1)\n\t}\n\n\treturn `${num.toFixed(2)}${usage.unit}`;\n}\n\nexport function convertBoolean(v: string, defaultValue = false): boolean {\n    switch (v) {\n        case \"1\": return true;\n        case \"0\": return false;\n        case \"on\": return true;\n        case \"off\": return false;\n        case \"true\": return true;\n        case \"false\": return false;\n        default: return defaultValue;\n    }\n}\n\nexport function convertPercentage(val: string): number {\n    return val ? parseInt(val) / 100 : null;\n}\n\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\n    if(elem.namespaceURI != ns.wordml)\n        return false;\n\n    switch(elem.localName) {\n        case \"color\":\n            props.color = xml.attr(elem, \"val\");\n            break;\n\n        case \"sz\":\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\n            break;\n\n        default:\n            return false;\n    }\n\n    return true;\n}\n","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { DocumentElement } from \"./document\";\n\nexport class DocumentPart extends Part {\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n    \n    body: DocumentElement\n\n    parseXml(root: Element) {\n        this.body = this._documentParser.parseDocumentFile(root);\n    }\n}","export enum DomType {\n    Document = \"document\",\n    Paragraph = \"paragraph\",\n    Run = \"run\",\n    Break = \"break\",\n    NoBreakHyphen = \"noBreakHyphen\",\n    Table = \"table\",\n    Row = \"row\",\n    Cell = \"cell\",\n    Hyperlink = \"hyperlink\",\n    Drawing = \"drawing\",\n    Image = \"image\",\n    Text = \"text\",\n    Tab = \"tab\",\n    Symbol = \"symbol\",\n    BookmarkStart = \"bookmarkStart\",\n    BookmarkEnd = \"bookmarkEnd\",\n    Footer = \"footer\",\n    Header = \"header\",\n    FootnoteReference = \"footnoteReference\", \n\tEndnoteReference = \"endnoteReference\",\n    Footnote = \"footnote\",\n    Endnote = \"endnote\",\n    SimpleField = \"simpleField\",\n    ComplexField = \"complexField\",\n    Instruction = \"instruction\",\n\tVmlPicture = \"vmlPicture\",\n\tMmlMath = \"mmlMath\",\n\tMmlMathParagraph = \"mmlMathParagraph\",\n\tMmlFraction = \"mmlFraction\",\n\tMmlFunction = \"mmlFunction\",\n\tMmlFunctionName = \"mmlFunctionName\",\n\tMmlNumerator = \"mmlNumerator\",\n\tMmlDenominator = \"mmlDenominator\",\n\tMmlRadical = \"mmlRadical\",\n\tMmlBase = \"mmlBase\",\n\tMmlDegree = \"mmlDegree\",\n\tMmlSuperscript = \"mmlSuperscript\",\n\tMmlSubscript = \"mmlSubscript\",\n\tMmlPreSubSuper = \"mmlPreSubSuper\",\n\tMmlSubArgument = \"mmlSubArgument\",\n\tMmlSuperArgument = \"mmlSuperArgument\",\n\tMmlNary = \"mmlNary\",\n\tMmlDelimiter = \"mmlDelimiter\",\n\tMmlRun = \"mmlRun\",\n\tMmlEquationArray = \"mmlEquationArray\",\n\tMmlLimit = \"mmlLimit\",\n\tMmlLimitLower = \"mmlLimitLower\",\n\tMmlMatrix = \"mmlMatrix\",\n\tMmlMatrixRow = \"mmlMatrixRow\",\n\tMmlBox = \"mmlBox\",\n\tMmlBar = \"mmlBar\",\n\tMmlGroupChar = \"mmlGroupChar\",\n\tVmlElement = \"vmlElement\",\n\tInserted = \"inserted\",\n\tDeleted = \"deleted\",\n\tDeletedText = \"deletedText\"\n}\n\nexport interface OpenXmlElement {\n    type: DomType;\n    children?: OpenXmlElement[];\n    cssStyle?: Record<string, string>;\n    props?: Record<string, any>;\n    \n\tstyleName?: string; //style name\n\tclassName?: string; //class mods\n\n    parent?: OpenXmlElement;\n}\n\nexport abstract class OpenXmlElementBase implements OpenXmlElement {\n    type: DomType;\n    children?: OpenXmlElement[] = [];\n    cssStyle?: Record<string, string> = {};\n    props?: Record<string, any>;\n\n    className?: string;\n    styleName?: string;\n\n    parent?: OpenXmlElement;\n}\n\nexport interface WmlHyperlink extends OpenXmlElement {\n\tid?: string;\n    href?: string;\n}\n\nexport interface WmlNoteReference extends OpenXmlElement {\n    id: string;\n}\n\nexport interface WmlBreak extends OpenXmlElement{\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\n}\n\nexport interface WmlText extends OpenXmlElement{\n    text: string;\n}\n\nexport interface WmlSymbol extends OpenXmlElement {\n    font: string;\n    char: string;\n}\n\nexport interface WmlTable extends OpenXmlElement {\n    columns?: WmlTableColumn[];\n    cellStyle?: Record<string, string>;\n\n\tcolBandSize?: number;\n\trowBandSize?: number;\n}\n\nexport interface WmlTableRow extends OpenXmlElement {\n\tisHeader?: boolean;\n}\n\nexport interface WmlTableCell extends OpenXmlElement {\n\tverticalMerge?: 'restart' | 'continue' | string;\n    span?: number;\n}\n\nexport interface IDomImage extends OpenXmlElement {\n    src: string;\n}\n\nexport interface WmlTableColumn {\n    width?: string;\n}\n\nexport interface IDomNumbering {\n    id: string;\n    level: number;\n    start: number;\n    pStyleName: string;\n    pStyle: Record<string, string>;\n    rStyle: Record<string, string>;\n    levelText?: string;\n    suff: string;\n    format?: string;\n    bullet?: NumberingPicBullet;\n}\n\nexport interface NumberingPicBullet {\n    id: number;\n    src: string;\n    style?: string;\n}\n","import { XmlParser } from \"../parser/xml-parser\";\nimport { Length } from \"./common\";\n\nexport interface LineSpacing {\n    after: Length;\n    before: Length;\n    line: number;\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\n}\n\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\n    return {\n        before: xml.lengthAttr(elem, \"before\"),\n        after: xml.lengthAttr(elem, \"after\"),\n        line: xml.intAttr(elem, \"line\"),\n        lineRule: xml.attr(elem, \"lineRule\")\n    } as LineSpacing;\n}","import { OpenXmlElement } from \"./dom\";\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\nimport { Borders } from \"./border\";\nimport { parseSectionProperties, SectionProperties } from \"./section\";\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\nimport { XmlParser } from \"../parser/xml-parser\";\nimport { parseRunProperties, RunProperties } from \"./run\";\n\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\n}\n\nexport interface ParagraphProperties extends CommonProperties {\n    sectionProps: SectionProperties;\n    tabs: ParagraphTab[];\n    numbering: ParagraphNumbering;\n\n    border: Borders;\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\n    lineSpacing: LineSpacing;\n    keepLines: boolean;\n    keepNext: boolean;\n    pageBreakBefore: boolean;\n    outlineLevel: number;\n\tstyleName?: string;\n\n    runProps: RunProperties;\n}\n\nexport interface ParagraphTab {\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\n    position: Length;\n}\n\nexport interface ParagraphNumbering {\n    id: string;\n    level: number;\n}\n\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\n    let result = <ParagraphProperties>{};\n\n    for(let el of xml.elements(elem)) {\n        parseParagraphProperty(el, result, xml);\n    }\n\n    return result;\n}\n\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\n    if (elem.namespaceURI != ns.wordml)\n        return false;\n\n    if(parseCommonProperty(elem, props, xml))\n        return true;\n\n    switch (elem.localName) {\n        case \"tabs\":\n            props.tabs = parseTabs(elem, xml);\n            break;\n\n        case \"sectPr\":\n            props.sectionProps = parseSectionProperties(elem, xml);\n            break;\n\n        case \"numPr\":\n            props.numbering = parseNumbering(elem, xml);\n            break;\n        \n        case \"spacing\":\n            props.lineSpacing = parseLineSpacing(elem, xml);\n            return false; // TODO\n            break;\n\n        case \"textAlignment\":\n            props.textAlignment = xml.attr(elem, \"val\");\n            return false; //TODO\n            break;\n\n        case \"keepLines\":\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\n            break;\n    \n        case \"keepNext\":\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\n            break;\n        \n        case \"pageBreakBefore\":\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\n            break;\n        \n        case \"outlineLvl\":\n            props.outlineLevel = xml.intAttr(elem, \"val\");\n            break;\n\n        case \"pStyle\":\n            props.styleName = xml.attr(elem, \"val\");\n            break;\n\n        case \"rPr\":\n            props.runProps = parseRunProperties(elem, xml);\n            break;\n        \n        default:\n            return false;\n    }\n\n    return true;\n}\n\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\n    return xml.elements(elem, \"tab\")\n        .map(e => <ParagraphTab>{\n            position: xml.lengthAttr(e, \"pos\"),\n            leader: xml.attr(e, \"leader\"),\n            style: xml.attr(e, \"val\")\n        });\n}\n\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\n    var result = <ParagraphNumbering>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"numId\":\n                result.id = xml.attr(e, \"val\");\n                break;\n\n            case \"ilvl\":\n                result.level = xml.intAttr(e, \"val\");\n                break;\n        }\n    }\n\n    return result;\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { CommonProperties, parseCommonProperty } from \"./common\";\nimport { OpenXmlElement } from \"./dom\";\n\nexport interface WmlRun extends OpenXmlElement, RunProperties {\n    id?: string;\n    verticalAlign?: string;\n\tfieldRun?: boolean;  \n}\n\nexport interface RunProperties extends CommonProperties {\n\n}\n\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\n    let result = <RunProperties>{};\n\n    for(let el of xml.elements(elem)) {\n        parseRunProperty(el, result, xml);\n    }\n\n    return result;\n}\n\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\n    if (parseCommonProperty(elem, props, xml))\n        return true;\n\n    return false;\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\nimport { Borders, parseBorders } from \"./border\";\nimport { Length } from \"./common\";\n\nexport interface Column {\n    space: Length;\n    width: Length;\n}\n\nexport interface Columns {\n    space: Length;\n    numberOfColumns: number;\n    separator: boolean;\n    equalWidth: boolean;\n    columns: Column[];\n}\n\nexport interface PageSize {\n    width: Length, \n    height: Length, \n    orientation: \"landscape\" | string \n}\n\nexport interface PageNumber {\n    start: number;\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\n    chapStyle: string;\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\" \n        | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\n        | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\n}\n\nexport interface PageMargins {\n    top: Length;\n    right: Length;\n    bottom: Length;\n    left: Length;\n    header: Length;\n    footer: Length;\n    gutter: Length;\n}\n\nexport enum SectionType {\n    Continuous = \"continuous\",\n    NextPage = \"nextPage\", \n    NextColumn = \"nextColumn\",\n    EvenPage = \"evenPage\",\n    OddPage = \"oddPage\",\n}\n\nexport interface FooterHeaderReference {\n    id: string;\n    type: string | \"first\" | \"even\" | \"default\";\n}\n\nexport interface SectionProperties {\n    type: SectionType | string;\n    pageSize: PageSize,\n    pageMargins: PageMargins,\n    pageBorders: Borders;\n    pageNumber: PageNumber;\n    columns: Columns;\n    footerRefs: FooterHeaderReference[];\n    headerRefs: FooterHeaderReference[];\n    titlePage: boolean;\n}\n\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\n    var section = <SectionProperties>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"pgSz\":\n                section.pageSize = {\n                    width: xml.lengthAttr(e, \"w\"),\n                    height: xml.lengthAttr(e, \"h\"),\n                    orientation: xml.attr(e, \"orient\")\n                }\n                break;\n\n            case \"type\":\n                section.type = xml.attr(e, \"val\");\n                break;\n\n            case \"pgMar\":\n                section.pageMargins = {\n                    left: xml.lengthAttr(e, \"left\"),\n                    right: xml.lengthAttr(e, \"right\"),\n                    top: xml.lengthAttr(e, \"top\"),\n                    bottom: xml.lengthAttr(e, \"bottom\"),\n                    header: xml.lengthAttr(e, \"header\"),\n                    footer: xml.lengthAttr(e, \"footer\"),\n                    gutter: xml.lengthAttr(e, \"gutter\"),\n                };\n                break;\n\n            case \"cols\":\n                section.columns = parseColumns(e, xml);\n                break;\n\n            case \"headerReference\":\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \n                break;\n            \n            case \"footerReference\":\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \n                break;\n\n            case \"titlePg\":\n                section.titlePage = xml.boolAttr(e, \"val\", true);\n                break;\n\n            case \"pgBorders\":\n                section.pageBorders = parseBorders(e, xml);\n                break;\n\n            case \"pgNumType\":\n                section.pageNumber = parsePageNumber(e, xml);\n                break;\n        }\n    }\n\n    return section;\n}\n\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\n    return {\n        numberOfColumns: xml.intAttr(elem, \"num\"),\n        space: xml.lengthAttr(elem, \"space\"),\n        separator: xml.boolAttr(elem, \"sep\"),\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\n        columns: xml.elements(elem, \"col\")\n            .map(e => <Column>{\n                width: xml.lengthAttr(e, \"w\"),\n                space: xml.lengthAttr(e, \"space\")\n            })\n    };\n}\n\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\n    return {\n        chapSep: xml.attr(elem, \"chapSep\"),\n        chapStyle: xml.attr(elem, \"chapStyle\"),\n        format: xml.attr(elem, \"fmt\"),\n        start: xml.intAttr(elem, \"start\")\n    };\n}\n\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\n    return {\n        id: xml.attr(elem, \"id\"),\n        type: xml.attr(elem, \"type\"),\n    }\n}","import { WordDocument } from './word-document';\nimport { DocumentParser } from './document-parser';\nimport { HtmlRenderer } from './html-renderer';\n\nexport interface Options {\n    inWrapper: boolean;\n    ignoreWidth: boolean;\n    ignoreHeight: boolean;\n    ignoreFonts: boolean;\n    breakPages: boolean;\n    debug: boolean;\n    experimental: boolean;\n    className: string;\n    trimXmlDeclaration: boolean;\n    renderHeaders: boolean;\n    renderFooters: boolean;\n    renderFootnotes: boolean;\n\trenderEndnotes: boolean;\n    ignoreLastRenderedPageBreak: boolean;\n\tuseBase64URL: boolean;\n\trenderChanges: boolean;\n}\n\nexport const defaultOptions: Options = {\n    ignoreHeight: false,\n    ignoreWidth: false,\n    ignoreFonts: false,\n    breakPages: true,\n    debug: false,\n    experimental: false,\n    className: \"docx\",\n    inWrapper: true,\n    trimXmlDeclaration: true,\n    ignoreLastRenderedPageBreak: true,\n    renderHeaders: true,\n    renderFooters: true,\n    renderFootnotes: true,\n\trenderEndnotes: true,\n\tuseBase64URL: false,\n\trenderChanges: false\n}\n\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any>  {\n    const ops = { ...defaultOptions, ...userOptions };\n    return WordDocument.load(data, new DocumentParser(ops), ops);\n}\n\nexport async function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\n    const ops = { ...defaultOptions, ...userOptions };\n    const renderer = new HtmlRenderer(window.document);\n\tconst doc = await WordDocument.load(data, new DocumentParser(ops), ops)\n\n\trenderer.render(doc, bodyContainer, styleContainer, ops);\n\t\n    return doc;\n}","import { Part } from \"../common/part\";\nimport { FontDeclaration, parseFonts } from \"./fonts\";\n\nexport class FontTablePart extends Part {\n    fonts: FontDeclaration[];\n\n    parseXml(root: Element) {\n        this.fonts = parseFonts(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nconst embedFontTypeMap = {\n    embedRegular: 'regular',\n    embedBold: 'bold',\n    embedItalic: 'italic',\n    embedBoldItalic: 'boldItalic',\n}\n\nexport interface FontDeclaration {\n    name: string,\n    altName: string,\n    family: string,\n    embedFontRefs: EmbedFontRef[];\n}\n\nexport interface EmbedFontRef {\n    id: string;\n    key: string;\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\n}\n\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\n    return xml.elements(root).map(el => parseFont(el, xml));\n}\n\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\n    let result = <FontDeclaration>{\n        name: xml.attr(elem, \"name\"),\n        embedFontRefs: []\n    };\n\n    for (let el of xml.elements(elem)) {\n        switch (el.localName) {\n            case \"family\":\n                result.family = xml.attr(el, \"val\");\n                break;\n\n            case \"altName\":\n                result.altName = xml.attr(el, \"val\");\n                break;\n\n            case \"embedRegular\":\n            case \"embedBold\":\n            case \"embedItalic\":\n            case \"embedBoldItalic\":\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\n    return { \n        id: xml.attr(elem, \"id\"), \n        key: xml.attr(elem, \"fontKey\"),\n        type: embedFontTypeMap[elem.localName]\n    };\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\n\nexport class WmlHeader extends OpenXmlElementBase {\n    type: DomType = DomType.Header;\n}\n\nexport class WmlFooter extends OpenXmlElementBase {\n    type: DomType = DomType.Footer;\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { OpenXmlElement } from \"../document/dom\";\nimport { WmlHeader, WmlFooter } from \"./elements\";\n\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\n    rootElement: T;\n\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    parseXml(root: Element) {\n        this.rootElement = this.createRootElement();\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\n    }\n\n    protected abstract createRootElement(): T;\n}\n\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\n    protected createRootElement(): WmlHeader {\n        return new WmlHeader();\n    }\n}\n\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\n    protected createRootElement(): WmlFooter {\n        return new WmlFooter();\n    }\n}","import { WordDocument } from './word-document';\nimport {\n\tDomType, WmlTable, IDomNumbering,\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\n} from './document/dom';\nimport { CommonProperties } from './document/common';\nimport { Options } from './docx-preview';\nimport { DocumentElement } from './document/document';\nimport { WmlParagraph } from './document/paragraph';\nimport { asArray, escapeClassName, isString, keyBy, mergeDeep } from './utils';\nimport { computePixelToPoint, updateTabStop } from './javascript';\nimport { FontTablePart } from './font-table/font-table';\nimport { FooterHeaderReference, SectionProperties } from './document/section';\nimport { WmlRun, RunProperties } from './document/run';\nimport { WmlBookmarkStart } from './document/bookmarks';\nimport { IDomStyle } from './document/style';\nimport { WmlBaseNote, WmlFootnote } from './notes/elements';\nimport { ThemePart } from './theme/theme-part';\nimport { BaseHeaderFooterPart } from './header-footer/parts';\nimport { Part } from './common/part';\nimport { VmlElement } from './vml/vml';\n\nconst ns = {\n\tsvg: \"http://www.w3.org/2000/svg\",\n\tmathML: \"http://www.w3.org/1998/Math/MathML\"\n}\n\ninterface CellPos {\n\tcol: number;\n\trow: number;\n}\n\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\n\nexport class HtmlRenderer {\n\n\tclassName: string = \"docx\";\n\trootSelector: string;\n\tdocument: WordDocument;\n\toptions: Options;\n\tstyleMap: Record<string, IDomStyle> = {};\n\tcurrentPart: Part = null;\n\n\ttableVerticalMerges: CellVerticalMergeType[] = [];\n\tcurrentVerticalMerge: CellVerticalMergeType = null;\n\ttableCellPositions: CellPos[] = [];\n\tcurrentCellPosition: CellPos = null;\n\n\tfootnoteMap: Record<string, WmlFootnote> = {};\n\tendnoteMap: Record<string, WmlFootnote> = {};\n\tcurrentFootnoteIds: string[];\n\tcurrentEndnoteIds: string[] = [];\n\tusedHederFooterParts: any[] = [];\n\n\tdefaultTabSize: string;\n\tcurrentTabs: any[] = [];\n\ttabsTimeout: any = 0;\n\n\tconstructor(public htmlDocument: Document) {\n\t}\n\n\trender(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\n\t\tthis.document = document;\n\t\tthis.options = options;\n\t\tthis.className = options.className;\n\t\tthis.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\n\t\tthis.styleMap = null;\n\n\t\tstyleContainer = styleContainer || bodyContainer;\n\n\t\tremoveAllElements(styleContainer);\n\t\tremoveAllElements(bodyContainer);\n\n\t\tappendComment(styleContainer, \"docxjs library predefined styles\");\n\t\tstyleContainer.appendChild(this.renderDefaultStyle());\n\n\t\tif (document.themePart) {\n\t\t\tappendComment(styleContainer, \"docxjs document theme values\");\n\t\t\tthis.renderTheme(document.themePart, styleContainer);\n\t\t}\n\n\t\tif (document.stylesPart != null) {\n\t\t\tthis.styleMap = this.processStyles(document.stylesPart.styles);\n\n\t\t\tappendComment(styleContainer, \"docxjs document styles\");\n\t\t\tstyleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\n\t\t}\n\n\t\tif (document.numberingPart) {\n\t\t\tthis.prodessNumberings(document.numberingPart.domNumberings);\n\n\t\t\tappendComment(styleContainer, \"docxjs document numbering styles\");\n\t\t\tstyleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\n\t\t\t//styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\n\t\t}\n\n\t\tif (document.footnotesPart) {\n\t\t\tthis.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\n\t\t}\n\n\t\tif (document.endnotesPart) {\n\t\t\tthis.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\n\t\t}\n\n\t\tif (document.settingsPart) {\n\t\t\tthis.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\n\t\t}\n\n\t\tif (!options.ignoreFonts && document.fontTablePart)\n\t\t\tthis.renderFontTable(document.fontTablePart, styleContainer);\n\n\t\tvar sectionElements = this.renderSections(document.documentPart.body);\n\n\t\tif (this.options.inWrapper) {\n\t\t\tbodyContainer.appendChild(this.renderWrapper(sectionElements));\n\t\t} else {\n\t\t\tappendChildren(bodyContainer, sectionElements);\n\t\t}\n\n\t\tthis.refreshTabStops();\n\t}\n\n\trenderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\n\t\tconst variables = {};\n\t\tconst fontScheme = themePart.theme?.fontScheme;\n\n\t\tif (fontScheme) {\n\t\t\tif (fontScheme.majorFont) {\n\t\t\t\tvariables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\n\t\t\t}\n\n\t\t\tif (fontScheme.minorFont) {\n\t\t\t\tvariables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\n\t\t\t}\n\t\t}\n\n\t\tconst colorScheme = themePart.theme?.colorScheme;\n\n\t\tif (colorScheme) {\n\t\t\tfor (let [k, v] of Object.entries(colorScheme.colors)) {\n\t\t\t\tvariables[`--docx-${k}-color`] = `#${v}`;\n\t\t\t}\n\t\t}\n\n\t\tconst cssText = this.styleToString(`.${this.className}`, variables);\n\t\tstyleContainer.appendChild(createStyleElement(cssText));\n\t}\n\n\trenderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\n\t\tfor (let f of fontsPart.fonts) {\n\t\t\tfor (let ref of f.embedFontRefs) {\n\t\t\t\tthis.document.loadFont(ref.id, ref.key).then(fontData => {\n\t\t\t\t\tconst cssValues = {\n\t\t\t\t\t\t'font-family': f.name,\n\t\t\t\t\t\t'src': `url(${fontData})`\n\t\t\t\t\t};\n\n\t\t\t\t\tif (ref.type == \"bold\" || ref.type == \"boldItalic\") {\n\t\t\t\t\t\tcssValues['font-weight'] = 'bold';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ref.type == \"italic\" || ref.type == \"boldItalic\") {\n\t\t\t\t\t\tcssValues['font-style'] = 'italic';\n\t\t\t\t\t}\n\n\t\t\t\t\tappendComment(styleContainer, `docxjs ${f.name} font`);\n\t\t\t\t\tconst cssText = this.styleToString(\"@font-face\", cssValues);\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(cssText));\n\t\t\t\t\tthis.refreshTabStops();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessStyleName(className: string): string {\n\t\treturn className ? `${this.className}_${escapeClassName(className)}` : this.className;\n\t}\n\n\tprocessStyles(styles: IDomStyle[]) {\n\t\tconst stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\n\n\t\tfor (const style of styles.filter(x => x.basedOn)) {\n\t\t\tvar baseStyle = stylesMap[style.basedOn];\n\n\t\t\tif (baseStyle) {\n\t\t\t\tstyle.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\n\t\t\t\tstyle.runProps = mergeDeep(style.runProps, baseStyle.runProps);\n\n\t\t\t\tfor (const baseValues of baseStyle.styles) {\n\t\t\t\t\tconst styleValues = style.styles.find(x => x.target == baseValues.target);\n\n\t\t\t\t\tif (styleValues) {\n\t\t\t\t\t\tthis.copyStyleProperties(baseValues.values, styleValues.values);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle.styles.push({ ...baseValues, values: { ...baseValues.values } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.options.debug)\n\t\t\t\tconsole.warn(`Can't find base style ${style.basedOn}`);\n\t\t}\n\n\t\tfor (let style of styles) {\n\t\t\tstyle.cssName = this.processStyleName(style.id);\n\t\t}\n\n\t\treturn stylesMap;\n\t}\n\n\tprodessNumberings(numberings: IDomNumbering[]) {\n\t\tfor (let num of numberings.filter(n => n.pStyleName)) {\n\t\t\tconst style = this.findStyle(num.pStyleName);\n\n\t\t\tif (style?.paragraphProps?.numbering) {\n\t\t\t\tstyle.paragraphProps.numbering.level = num.level;\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessElement(element: OpenXmlElement) {\n\t\tif (element.children) {\n\t\t\tfor (var e of element.children) {\n\t\t\t\te.parent = element;\n\n\t\t\t\tif (e.type == DomType.Table) {\n\t\t\t\t\tthis.processTable(e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.processElement(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessTable(table: WmlTable) {\n\t\tfor (var r of table.children) {\n\t\t\tfor (var c of r.children) {\n\t\t\t\tc.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\n\t\t\t\t\t\"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\n\t\t\t\t\t\"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\n\t\t\t\t]);\n\n\t\t\t\tthis.processElement(c);\n\t\t\t}\n\t\t}\n\t}\n\n\tcopyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\n\t\tif (!input)\n\t\t\treturn output;\n\n\t\tif (output == null) output = {};\n\t\tif (attrs == null) attrs = Object.getOwnPropertyNames(input);\n\n\t\tfor (var key of attrs) {\n\t\t\tif (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\n\t\t\t\toutput[key] = input[key];\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tcreateSection(className: string, props: SectionProperties) {\n\t\tvar elem = this.createElement(\"section\", { className });\n\n\t\tif (props) {\n\t\t\tif (props.pageMargins) {\n\t\t\t\telem.style.paddingLeft = props.pageMargins.left;\n\t\t\t\telem.style.paddingRight = props.pageMargins.right;\n\t\t\t\telem.style.paddingTop = props.pageMargins.top;\n\t\t\t\telem.style.paddingBottom = props.pageMargins.bottom;\n\t\t\t}\n\n\t\t\tif (props.pageSize) {\n\t\t\t\tif (!this.options.ignoreWidth)\n\t\t\t\t\telem.style.width = props.pageSize.width;\n\t\t\t\tif (!this.options.ignoreHeight)\n\t\t\t\t\telem.style.minHeight = props.pageSize.height;\n\t\t\t}\n\n\t\t\tif (props.columns && props.columns.numberOfColumns) {\n\t\t\t\telem.style.columnCount = `${props.columns.numberOfColumns}`;\n\t\t\t\telem.style.columnGap = props.columns.space;\n\n\t\t\t\tif (props.columns.separator) {\n\t\t\t\t\telem.style.columnRule = \"1px solid black\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn elem;\n\t}\n\n\trenderSections(document: DocumentElement): HTMLElement[] {\n\t\tconst result = [];\n\n\t\tthis.processElement(document);\n\t\tconst sections = this.splitBySection(document.children);\n\t\tlet prevProps = null;\n\n\t\tfor (let i = 0, l = sections.length; i < l; i++) {\n\t\t\tthis.currentFootnoteIds = [];\n\n\t\t\tconst section = sections[i];\n\t\t\tconst props = section.sectProps || document.props;\n\t\t\tconst sectionElement = this.createSection(this.className, props);\n\t\t\tthis.renderStyleValues(document.cssStyle, sectionElement);\n\n\t\t\tthis.options.renderHeaders && this.renderHeaderFooter(props.headerRefs, props,\n\t\t\t\tresult.length, prevProps != props, sectionElement);\n\n\t\t\tvar contentElement = this.createElement(\"article\");\n\t\t\tthis.renderElements(section.elements, contentElement);\n\t\t\tsectionElement.appendChild(contentElement);\n\n\t\t\tif (this.options.renderFootnotes) {\n\t\t\t\tthis.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\n\t\t\t}\n\n\t\t\tif (this.options.renderEndnotes && i == l - 1) {\n\t\t\t\tthis.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\n\t\t\t}\n\n\t\t\tthis.options.renderFooters && this.renderHeaderFooter(props.footerRefs, props,\n\t\t\t\tresult.length, prevProps != props, sectionElement);\n\n\t\t\tresult.push(sectionElement);\n\t\t\tprevProps = props;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderHeaderFooter(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, into: HTMLElement) {\n\t\tif (!refs) return;\n\n\t\tvar ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\n\t\t\t?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\n\t\t\t?? refs.find(x => x.type == \"default\");\n\n\t\tvar part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\n\n\t\tif (part) {\n\t\t\tthis.currentPart = part;\n\t\t\tif (!this.usedHederFooterParts.includes(part.path)) {\n\t\t\t\tthis.processElement(part.rootElement);\n\t\t\t\tthis.usedHederFooterParts.push(part.path);\n\t\t\t}\n\t\t\tthis.renderElements([part.rootElement], into);\n\t\t\tthis.currentPart = null;\n\t\t}\n\t}\n\n\tisPageBreakElement(elem: OpenXmlElement): boolean {\n\t\tif (elem.type != DomType.Break)\n\t\t\treturn false;\n\n\t\tif ((elem as WmlBreak).break == \"lastRenderedPageBreak\")\n\t\t\treturn !this.options.ignoreLastRenderedPageBreak;\n\n\t\treturn (elem as WmlBreak).break == \"page\";\n\t}\n\n\tsplitBySection(elements: OpenXmlElement[]): { sectProps: SectionProperties, elements: OpenXmlElement[] }[] {\n\t\tvar current = { sectProps: null, elements: [] };\n\t\tvar result = [current];\n\n\t\tfor (let elem of elements) {\n\t\t\tif (elem.type == DomType.Paragraph) {\n\t\t\t\tconst s = this.findStyle((elem as WmlParagraph).styleName);\n\n\t\t\t\tif (s?.paragraphProps?.pageBreakBefore) {\n\t\t\t\t\tcurrent.sectProps = sectProps;\n\t\t\t\t\tcurrent = { sectProps: null, elements: [] };\n\t\t\t\t\tresult.push(current);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrent.elements.push(elem);\n\n\t\t\tif (elem.type == DomType.Paragraph) {\n\t\t\t\tconst p = elem as WmlParagraph;\n\n\t\t\t\tvar sectProps = p.sectionProps;\n\t\t\t\tvar pBreakIndex = -1;\n\t\t\t\tvar rBreakIndex = -1;\n\n\t\t\t\tif (this.options.breakPages && p.children) {\n\t\t\t\t\tpBreakIndex = p.children.findIndex(r => {\n\t\t\t\t\t\trBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\n\t\t\t\t\t\treturn rBreakIndex != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (sectProps || pBreakIndex != -1) {\n\t\t\t\t\tcurrent.sectProps = sectProps;\n\t\t\t\t\tcurrent = { sectProps: null, elements: [] };\n\t\t\t\t\tresult.push(current);\n\t\t\t\t}\n\n\t\t\t\tif (pBreakIndex != -1) {\n\t\t\t\t\tlet breakRun = p.children[pBreakIndex];\n\t\t\t\t\tlet splitRun = rBreakIndex < breakRun.children.length - 1;\n\n\t\t\t\t\tif (pBreakIndex < p.children.length - 1 || splitRun) {\n\t\t\t\t\t\tvar children = elem.children;\n\t\t\t\t\t\tvar newParagraph = { ...elem, children: children.slice(pBreakIndex) };\n\t\t\t\t\t\telem.children = children.slice(0, pBreakIndex);\n\t\t\t\t\t\tcurrent.elements.push(newParagraph);\n\n\t\t\t\t\t\tif (splitRun) {\n\t\t\t\t\t\t\tlet runChildren = breakRun.children;\n\t\t\t\t\t\t\tlet newRun = { ...breakRun, children: runChildren.slice(0, rBreakIndex) };\n\t\t\t\t\t\t\telem.children.push(newRun);\n\t\t\t\t\t\t\tbreakRun.children = runChildren.slice(rBreakIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet currentSectProps = null;\n\n\t\tfor (let i = result.length - 1; i >= 0; i--) {\n\t\t\tif (result[i].sectProps == null) {\n\t\t\t\tresult[i].sectProps = currentSectProps;\n\t\t\t} else {\n\t\t\t\tcurrentSectProps = result[i].sectProps\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderWrapper(children: HTMLElement[]) {\n\t\treturn this.createElement(\"div\", { className: `${this.className}-wrapper` }, children);\n\t}\n\n\trenderDefaultStyle() {\n\t\tvar c = this.className;\n\t\tvar styleText = `\n.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \n.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\n.${c} { color: black; hyphens: auto; }\nsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\nsection.${c}>article { margin-bottom: auto; z-index: 1; }\nsection.${c}>footer { z-index: 1; }\n.${c} .table-wrapper { overflow-x: scroll; scrollbar-width: none; -ms-overflow-style: none; }\n.${c} .table-wrapper::-webkit-scrollbar { display: none; }\n.${c} table { border-collapse: collapse; }\n.${c} table td, .${c} table th { vertical-align: top; }\n.${c} p { margin: 0pt; min-height: 1em; }\n.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\n.${c} a { color: inherit; text-decoration: inherit; }\n`;\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\t// renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\n\t//     let css = \"\";\n\t//     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\n\t//     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\n\t//     const topCounters = [];\n\n\t//     for(let num of numberingPart.numberings) {\n\t//         const absNum = numberingMap[num.abstractId];\n\n\t//         for(let lvl of absNum.levels) {\n\t//             const className = this.numberingClass(num.id, lvl.level);\n\t//             let listStyleType = \"none\";\n\n\t//             if(lvl.text && lvl.format == 'decimal') {\n\t//                 const counter = this.numberingCounter(num.id, lvl.level);\n\n\t//                 if (lvl.level > 0) {\n\t//                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\n\t//                         \"counter-reset\": counter\n\t//                     });\n\t//                 } else {\n\t//                     topCounters.push(counter);\n\t//                 }\n\n\t//                 css += this.styleToString(`p.${className}:before`, {\n\t//                     \"content\": this.levelTextToContent(lvl.text, num.id),\n\t//                     \"counter-increment\": counter\n\t//                 });\n\t//             } else if(lvl.bulletPictureId) {\n\t//                 let pict = bulletMap[lvl.bulletPictureId];\n\t//                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\n\n\t//                 css += this.styleToString(`p.${className}:before`, {\n\t//                     \"content\": \"' '\",\n\t//                     \"display\": \"inline-block\",\n\t//                     \"background\": `var(${variable})`\n\t//                 }, pict.style);\n\n\t//                 this.document.loadNumberingImage(pict.referenceId).then(data => {\n\t//                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\n\t//                     container.appendChild(createStyleElement(text));\n\t//                 });\n\t//             } else {\n\t//                 listStyleType = this.numFormatToCssValue(lvl.format);\n\t//             }\n\n\t//             css += this.styleToString(`p.${className}`, {\n\t//                 \"display\": \"list-item\",\n\t//                 \"list-style-position\": \"inside\",\n\t//                 \"list-style-type\": listStyleType,\n\t//                 //TODO\n\t//                 //...num.style\n\t//             });\n\t//         }\n\t//     }\n\n\t//     if (topCounters.length > 0) {\n\t//         css += this.styleToString(`.${this.className}-wrapper`, {\n\t//             \"counter-reset\": topCounters.join(\" \")\n\t//         });\n\t//     }\n\n\t//     return createStyleElement(css);\n\t// }\n\n\trenderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\n\t\tvar styleText = \"\";\n\t\tvar resetCounters = [];\n\n\t\tfor (var num of numberings) {\n\t\t\tvar selector = `p.${this.numberingClass(num.id, num.level)}`;\n\t\t\tvar listStyleType = \"none\";\n\n\t\t\tif (num.bullet) {\n\t\t\t\tlet valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\n\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\n\t\t\t\t\t\"content\": \"' '\",\n\t\t\t\t\t\"display\": \"inline-block\",\n\t\t\t\t\t\"background\": `var(${valiable})`\n\t\t\t\t}, num.bullet.style);\n\n\t\t\t\tthis.document.loadNumberingImage(num.bullet.src).then(data => {\n\t\t\t\t\tvar text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(text));\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (num.levelText) {\n\t\t\t\tlet counter = this.numberingCounter(num.id, num.level);\n\t\t\t\tconst counterReset = counter + \" \" + (num.start - 1);\n\t\t\t\tif (num.level > 0) {\n\t\t\t\t\tstyleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\n\t\t\t\t\t\t\"counter-reset\": counterReset\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// reset all level counters with start value\n\t\t\t\tresetCounters.push(counterReset);\n\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\n\t\t\t\t\t\"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\n\t\t\t\t\t\"counter-increment\": counter,\n\t\t\t\t\t...num.rStyle,\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlistStyleType = this.numFormatToCssValue(num.format);\n\t\t\t}\n\n\t\t\tstyleText += this.styleToString(selector, {\n\t\t\t\t\"display\": \"list-item\",\n\t\t\t\t\"list-style-position\": \"inside\",\n\t\t\t\t\"list-style-type\": listStyleType,\n\t\t\t\t...num.pStyle\n\t\t\t});\n\t\t}\n\n\t\tif (resetCounters.length > 0) {\n\t\t\tstyleText += this.styleToString(this.rootSelector, {\n\t\t\t\t\"counter-reset\": resetCounters.join(\" \")\n\t\t\t});\n\t\t}\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\trenderStyles(styles: IDomStyle[]): HTMLElement {\n\t\tvar styleText = \"\";\n\t\tconst stylesMap = this.styleMap;\n\t\tconst defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\n\n\t\tfor (const style of styles) {\n\t\t\tvar subStyles = style.styles;\n\n\t\t\tif (style.linked) {\n\t\t\t\tvar linkedStyle = style.linked && stylesMap[style.linked];\n\n\t\t\t\tif (linkedStyle)\n\t\t\t\t\tsubStyles = subStyles.concat(linkedStyle.styles);\n\t\t\t\telse if (this.options.debug)\n\t\t\t\t\tconsole.warn(`Can't find linked style ${style.linked}`);\n\t\t\t}\n\n\t\t\tfor (const subStyle of subStyles) {\n\t\t\t\t//TODO temporary disable modificators until test it well\n\t\t\t\tvar selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''}\n\n\t\t\t\tif (style.target != subStyle.target)\n\t\t\t\t\tselector += ` ${subStyle.target}`;\n\n\t\t\t\tif (defautStyles[style.target] == style)\n\t\t\t\t\tselector = `.${this.className} ${style.target}, ` + selector;\n\n\t\t\t\tstyleText += this.styleToString(selector, subStyle.values);\n\t\t\t}\n\t\t}\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\trenderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, into: HTMLElement) {\n\t\tvar notes = noteIds.map(id => notesMap[id]).filter(x => x);\n\n\t\tif (notes.length > 0) {\n\t\t\tvar result = this.createElement(\"ol\", null, this.renderElements(notes));\n\t\t\tinto.appendChild(result);\n\t\t}\n\t}\n\n\trenderElement(elem: OpenXmlElement): Node | Node[] {\n\t\tswitch (elem.type) {\n\t\t\tcase DomType.Paragraph:\n\t\t\t\treturn this.renderParagraph(elem as WmlParagraph);\n\n\t\t\tcase DomType.BookmarkStart:\n\t\t\t\treturn this.renderBookmarkStart(elem as WmlBookmarkStart);\n\n\t\t\tcase DomType.BookmarkEnd:\n\t\t\t\treturn null; //ignore bookmark end\n\n\t\t\tcase DomType.Run:\n\t\t\t\treturn this.renderRun(elem as WmlRun);\n\n\t\t\tcase DomType.Table:\n\t\t\t\treturn this.renderTable(elem);\n\n\t\t\tcase DomType.Row:\n\t\t\t\treturn this.renderTableRow(elem);\n\n\t\t\tcase DomType.Cell:\n\t\t\t\treturn this.renderTableCell(elem);\n\n\t\t\tcase DomType.Hyperlink:\n\t\t\t\treturn this.renderHyperlink(elem);\n\n\t\t\tcase DomType.Drawing:\n\t\t\t\treturn this.renderDrawing(elem);\n\n\t\t\tcase DomType.Image:\n\t\t\t\treturn this.renderImage(elem as IDomImage);\n\n\t\t\tcase DomType.Text:\n\t\t\t\treturn this.renderText(elem as WmlText);\n\n\t\t\tcase DomType.Text:\n\t\t\t\treturn this.renderText(elem as WmlText);\n\n\t\t\tcase DomType.DeletedText:\n\t\t\t\treturn this.renderDeletedText(elem as WmlText);\n\n\t\t\tcase DomType.Tab:\n\t\t\t\treturn this.renderTab(elem);\n\n\t\t\tcase DomType.Symbol:\n\t\t\t\treturn this.renderSymbol(elem as WmlSymbol);\n\n\t\t\tcase DomType.Break:\n\t\t\t\treturn this.renderBreak(elem as WmlBreak);\n\n\t\t\tcase DomType.Footer:\n\t\t\t\treturn this.renderContainer(elem, \"footer\");\n\n\t\t\tcase DomType.Header:\n\t\t\t\treturn this.renderContainer(elem, \"header\");\n\n\t\t\tcase DomType.Footnote:\n\t\t\tcase DomType.Endnote:\n\t\t\t\treturn this.renderContainer(elem, \"li\");\n\n\t\t\tcase DomType.FootnoteReference:\n\t\t\t\treturn this.renderFootnoteReference(elem as WmlNoteReference);\n\n\t\t\tcase DomType.EndnoteReference:\n\t\t\t\treturn this.renderEndnoteReference(elem as WmlNoteReference);\n\n\t\t\tcase DomType.NoBreakHyphen:\n\t\t\t\treturn this.createElement(\"wbr\");\n\n\t\t\tcase DomType.VmlPicture:\n\t\t\t\treturn this.renderVmlPicture(elem);\n\n\t\t\tcase DomType.VmlElement:\n\t\t\t\treturn this.renderVmlElement(elem as VmlElement);\n\n\t\t\tcase DomType.MmlMath:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"math\", { xmlns: ns.mathML });\n\n\t\t\tcase DomType.MmlMathParagraph:\n\t\t\t\treturn this.renderContainer(elem, \"span\");\n\n\t\t\tcase DomType.MmlFraction:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mfrac\");\n\n\t\t\tcase DomType.MmlBase:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML,\n\t\t\t\t\telem.parent.type == DomType.MmlMatrixRow ? \"mtd\" : \"mrow\");\n\n\t\t\tcase DomType.MmlNumerator:\n\t\t\tcase DomType.MmlDenominator:\n\t\t\tcase DomType.MmlFunction:\n\t\t\tcase DomType.MmlLimit:\n\t\t\tcase DomType.MmlBox:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mrow\");\n\n\t\t\tcase DomType.MmlGroupChar:\n\t\t\t\treturn this.renderMmlGroupChar(elem);\n\n\t\t\tcase DomType.MmlLimitLower:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"munder\");\n\n\t\t\tcase DomType.MmlMatrix:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mtable\");\n\n\t\t\tcase DomType.MmlMatrixRow:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mtr\");\n\n\t\t\tcase DomType.MmlRadical:\n\t\t\t\treturn this.renderMmlRadical(elem);\n\n\t\t\tcase DomType.MmlSuperscript:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"msup\");\n\n\t\t\tcase DomType.MmlSubscript:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"msub\");\n\n\t\t\tcase DomType.MmlDegree:\n\t\t\tcase DomType.MmlSuperArgument:\n\t\t\tcase DomType.MmlSubArgument:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mn\");\n\n\t\t\tcase DomType.MmlFunctionName:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"ms\");\n\n\t\t\tcase DomType.MmlDelimiter:\n\t\t\t\treturn this.renderMmlDelimiter(elem);\n\n\t\t\tcase DomType.MmlRun:\n\t\t\t\treturn this.renderMmlRun(elem);\n\n\t\t\tcase DomType.MmlNary:\n\t\t\t\treturn this.renderMmlNary(elem);\n\n\t\t\tcase DomType.MmlPreSubSuper:\n\t\t\t\treturn this.renderMmlPreSubSuper(elem);\n\n\t\t\tcase DomType.MmlBar:\n\t\t\t\treturn this.renderMmlBar(elem);\n\n\t\t\tcase DomType.MmlEquationArray:\n\t\t\t\treturn this.renderMllList(elem);\n\n\t\t\tcase DomType.Inserted:\n\t\t\t\treturn this.renderInserted(elem);\n\n\t\t\tcase DomType.Deleted:\n\t\t\t\treturn this.renderDeleted(elem);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trenderChildren(elem: OpenXmlElement, into?: Element): Node[] {\n\t\treturn this.renderElements(elem.children, into);\n\t}\n\n\trenderElements(elems: OpenXmlElement[], into?: Element): Node[] {\n\t\tif (elems == null)\n\t\t\treturn null;\n\n\t\tvar result = elems.flatMap(e => this.renderElement(e)).filter(e => e != null);\n\n\t\tif (into)\n\t\t\tappendChildren(into, result);\n\n\t\treturn result;\n\t}\n\n\trenderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\n\t\treturn this.createElement(tagName, props, this.renderChildren(elem));\n\t}\n\n\trenderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\n\t\treturn createElementNS(ns, tagName, props, this.renderChildren(elem));\n\t}\n\n\trenderParagraph(elem: WmlParagraph) {\n\t\tvar result = this.createElement(\"p\");\n\n\t\tconst style = this.findStyle(elem.styleName);\n\t\telem.tabs ??= style?.paragraphProps?.tabs;  //TODO\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\t\tthis.renderCommonProperties(result.style, elem);\n\n\t\tconst numbering = elem.numbering ?? style?.paragraphProps?.numbering;\n\n\t\tif (numbering) {\n\t\t\tresult.classList.add(this.numberingClass(numbering.id, numbering.level));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderRunProperties(style: any, props: RunProperties) {\n\t\tthis.renderCommonProperties(style, props);\n\t}\n\n\trenderCommonProperties(style: any, props: CommonProperties) {\n\t\tif (props == null)\n\t\t\treturn;\n\n\t\tif (props.color) {\n\t\t\tstyle[\"color\"] = props.color;\n\t\t}\n\n\t\tif (props.fontSize) {\n\t\t\tstyle[\"font-size\"] = props.fontSize;\n\t\t}\n\t}\n\n\trenderHyperlink(elem: WmlHyperlink) {\n\t\tvar result = this.createElement(\"a\");\n\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.href) {\n\t\t\tresult.href = elem.href;\n\t\t} else if(elem.id) {\n\t\t\tconst rel = this.document.documentPart.rels\n\t\t\t\t.find(it => it.id == elem.id && it.targetMode === \"External\");\n\t\t\tresult.href = rel?.target;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderDrawing(elem: OpenXmlElement) {\n\t\tvar result = this.createElement(\"div\");\n\n\t\tresult.style.display = \"inline-block\";\n\t\tresult.style.position = \"relative\";\n\t\tresult.style.textIndent = \"0px\";\n\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\treturn result;\n\t}\n\n\trenderImage(elem: IDomImage) {\n\t\tlet result = this.createElement(\"img\");\n\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (this.document) {\n\t\t\tthis.document.loadDocumentImage(elem.src, this.currentPart).then(x => {\n\t\t\t\tresult.src = x;\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderText(elem: WmlText) {\n\t\treturn this.htmlDocument.createTextNode(elem.text);\n\t}\n\n\trenderDeletedText(elem: WmlText) {\n\t\treturn this.options.renderEndnotes ? this.htmlDocument.createTextNode(elem.text) : null;\n\t}\n\n\trenderBreak(elem: WmlBreak) {\n\t\tif (elem.break == \"textWrapping\") {\n\t\t\treturn this.createElement(\"br\");\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trenderInserted(elem: OpenXmlElement): Node | Node[] {\n\t\tif (this.options.renderChanges)\n\t\t\treturn this.renderContainer(elem, \"ins\");\n\n\t\treturn this.renderChildren(elem);\n\t}\n\n\trenderDeleted(elem: OpenXmlElement): Node {\n\t\tif (this.options.renderChanges)\n\t\t\treturn this.renderContainer(elem, \"del\");\n\n\t\treturn null;\n\t}\n\n\trenderSymbol(elem: WmlSymbol) {\n\t\tvar span = this.createElement(\"span\");\n\t\tspan.style.fontFamily = elem.font;\n\t\tspan.innerHTML = `&#x${elem.char};`\n\t\treturn span;\n\t}\n\n\trenderFootnoteReference(elem: WmlNoteReference) {\n\t\tvar result = this.createElement(\"sup\");\n\t\tthis.currentFootnoteIds.push(elem.id);\n\t\tresult.textContent = `${this.currentFootnoteIds.length}`;\n\t\treturn result;\n\t}\n\n\trenderEndnoteReference(elem: WmlNoteReference) {\n\t\tvar result = this.createElement(\"sup\");\n\t\tthis.currentEndnoteIds.push(elem.id);\n\t\tresult.textContent = `${this.currentEndnoteIds.length}`;\n\t\treturn result;\n\t}\n\n\trenderTab(elem: OpenXmlElement) {\n\t\tvar tabSpan = this.createElement(\"span\");\n\n\t\ttabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\n\n\t\tif (this.options.experimental) {\n\t\t\ttabSpan.className = this.tabStopClass();\n\t\t\tvar stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\n\t\t\tthis.currentTabs.push({ stops, span: tabSpan });\n\t\t}\n\n\t\treturn tabSpan;\n\t}\n\n\trenderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\n\t\tvar result = this.createElement(\"span\");\n\t\tresult.id = elem.name;\n\t\treturn result;\n\t}\n\n\trenderRun(elem: WmlRun) {\n\t\tif (elem.fieldRun)\n\t\t\treturn null;\n\n\t\tconst result = this.createElement(\"span\");\n\n\t\tif (elem.id)\n\t\t\tresult.id = elem.id;\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.verticalAlign) {\n\t\t\tconst wrapper = this.createElement(elem.verticalAlign as any);\n\t\t\tthis.renderChildren(elem, wrapper);\n\t\t\tresult.appendChild(wrapper);\n\t\t}\n\t\telse {\n\t\t\tthis.renderChildren(elem, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderTable(elem: WmlTable) {\n\t\tlet result = this.createElement(\"table\");\n\n\t\tthis.tableCellPositions.push(this.currentCellPosition);\n\t\tthis.tableVerticalMerges.push(this.currentVerticalMerge);\n\t\tthis.currentVerticalMerge = {};\n\t\tthis.currentCellPosition = { col: 0, row: 0 };\n\n\t\tif (elem.columns)\n\t\t\tresult.appendChild(this.renderTableColumns(elem.columns));\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tthis.currentVerticalMerge = this.tableVerticalMerges.pop();\n\t\tthis.currentCellPosition = this.tableCellPositions.pop();\n\n\t\treturn this.createElement(\"div\", {className: 'table-wrapper'}, [result])\n\t}\n\n\trenderTableColumns(columns: WmlTableColumn[]) {\n\t\tlet result = this.createElement(\"colgroup\");\n\n\t\tfor (let col of columns) {\n\t\t\tlet colElem = this.createElement(\"col\");\n\n\t\t\tif (col.width)\n\t\t\t\tcolElem.style.width = col.width;\n\n\t\t\tresult.appendChild(colElem);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderTableRow(elem: OpenXmlElement) {\n\t\tlet result = this.createElement(\"tr\");\n\n\t\tthis.currentCellPosition.col = 0;\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tthis.currentCellPosition.row++;\n\n\t\treturn result;\n\t}\n\n\trenderTableCell(elem: WmlTableCell) {\n\t\tlet result = this.createElement(\"td\");\n\n\t\tconst key = this.currentCellPosition.col;\n\n\t\tif (elem.verticalMerge) {\n\t\t\tif (elem.verticalMerge == \"restart\") {\n\t\t\t\tthis.currentVerticalMerge[key] = result;\n\t\t\t\tresult.rowSpan = 1;\n\t\t\t} else if (this.currentVerticalMerge[key]) {\n\t\t\t\tthis.currentVerticalMerge[key].rowSpan += 1;\n\t\t\t\tresult.style.display = \"none\";\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentVerticalMerge[key] = null;\n\t\t}\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.span)\n\t\t\tresult.colSpan = elem.span;\n\n\t\tthis.currentCellPosition.col += result.colSpan;\n\n\t\treturn result;\n\t}\n\n\trenderVmlPicture(elem: OpenXmlElement) {\n\t\tvar result = createElement(\"div\");\n\t\tthis.renderChildren(elem, result);\n\t\treturn result;\n\t}\n\n\trenderVmlElement(elem: VmlElement): SVGElement {\n\t\tvar container = createSvgElement(\"svg\");\n\n\t\tcontainer.setAttribute(\"style\", elem.cssStyleText);\n\n\t\tconst result = this.renderVmlChildElement(elem);\n\n\t\tif (elem.imageHref?.id) {\n\t\t\tthis.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\n\t\t\t\t.then(x => result.setAttribute(\"href\", x));\n\t\t}\n\n\t\tcontainer.appendChild(result);\n\n\t\trequestAnimationFrame(() => {\n\t\t\tconst bb = (container.firstElementChild as any).getBBox();\n\n\t\t\tcontainer.setAttribute(\"width\", `${Math.ceil(bb.x +  bb.width)}`);\n\t\t\tcontainer.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\n\t\t});\n\n\t\treturn container;\n\t}\n\n\trenderVmlChildElement(elem: VmlElement): any {\n\t\tconst result = createSvgElement(elem.tagName as any);\n\t\tObject.entries(elem.attrs).forEach(([k, v]) => result.setAttribute(k, v));\n\n\t\tfor (let child of elem.children) {\n\t\t\tif (child.type == DomType.VmlElement) {\n\t\t\t\tresult.appendChild(this.renderVmlChildElement(child as VmlElement));\n\t\t\t} else {\n\t\t\t\tresult.appendChild(...asArray(this.renderElement(child as any)));\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderMmlRadical(elem: OpenXmlElement): HTMLElement {\n\t\tconst base = elem.children.find(el => el.type == DomType.MmlBase);\n\n\t\tif (elem.props?.hideDegree) {\n\t\t\treturn createElementNS(ns.mathML, \"msqrt\", null, this.renderElements([base]));\n\t\t}\n\n\t\tconst degree = elem.children.find(el => el.type == DomType.MmlDegree);\n\t\treturn createElementNS(ns.mathML, \"mroot\", null, this.renderElements([base, degree]));\n\t}\n\n\trenderMmlDelimiter(elem: OpenXmlElement): HTMLElement {\n\t\tconst children = [];\n\n\t\tchildren.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']));\n\t\tchildren.push(...this.renderElements(elem.children));\n\t\tchildren.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']));\n\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\n\t}\n\n\trenderMmlNary(elem: OpenXmlElement): HTMLElement {\n\t\tconst children = [];\n\t\tconst grouped = keyBy(elem.children, x => x.type);\n\n\t\tconst sup = grouped[DomType.MmlSuperArgument];\n\t\tconst sub = grouped[DomType.MmlSubArgument];\n\t\tconst supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\n\t\tconst subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\n\n\t\tconst charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props?.char ?? '\\u222B']);\n\n\t\tif (supElem || subElem) {\n\t\t\tchildren.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\n\t\t} else if(supElem) {\n\t\t\tchildren.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\n\t\t} else if(subElem) {\n\t\t\tchildren.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\n\t\t} else {\n\t\t\tchildren.push(charElem);\n\t\t}\n\n\t\tchildren.push(...this.renderElements(grouped[DomType.MmlBase].children));\n\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\n\t}\n\n\trenderMmlPreSubSuper(elem: OpenXmlElement) {\n\t\tconst children = [];\n\t\tconst grouped = keyBy(elem.children, x => x.type);\n\n\t\tconst sup = grouped[DomType.MmlSuperArgument];\n\t\tconst sub = grouped[DomType.MmlSubArgument];\n\t\tconst supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\n\t\tconst subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\n\t\tconst stubElem = createElementNS(ns.mathML, \"mo\", null);\n\n\t\tchildren.push(createElementNS(ns.mathML, \"msubsup\", null, [stubElem, subElem, supElem]));\n\t\tchildren.push(...this.renderElements(grouped[DomType.MmlBase].children));\n\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\n\t}\n\n\trenderMmlGroupChar(elem: OpenXmlElement) {\n\t\tconst tagName = elem.props.verticalJustification === \"bot\" ? \"mover\" : \"munder\";\n\t\tconst result = this.renderContainerNS(elem, ns.mathML, tagName);\n\n\t\tif (elem.props.char) {\n\t\t\tresult.appendChild(createElementNS(ns.mathML, \"mo\", null, [elem.props.char]));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderMmlBar(elem: OpenXmlElement) {\n\t\tconst result = this.renderContainerNS(elem, ns.mathML, \"mrow\");\n\n\t\tswitch(elem.props.position) {\n\t\t\tcase \"top\": result.style.textDecoration = \"overline\"; break\n\t\t\tcase \"bottom\": result.style.textDecoration = \"underline\"; break\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderMmlRun(elem: OpenXmlElement) {\n\t\tconst result = createElementNS(ns.mathML, \"ms\");\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\t\tthis.renderChildren(elem, result);\n\n\t\treturn result;\n\t}\n\n\trenderMllList(elem: OpenXmlElement) {\n\t\tconst result = createElementNS(ns.mathML, \"mtable\");\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tconst childern = this.renderChildren(elem);\n\n\t\tfor (let child of this.renderChildren(elem)) {\n\t\t\tresult.appendChild(createElementNS(ns.mathML, \"mtr\", null, [\n\t\t\t\tcreateElementNS(ns.mathML, \"mtd\", null, [child])\n\t\t\t]));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\n\trenderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\n\t\tfor (let k in style) {\n\t\t\tif (k.startsWith(\"$\")) {\n\t\t\t\touput.setAttribute(k.slice(1), style[k]);\n\t\t\t} else {\n\t\t\t\touput.style[k] = style[k];\n\t\t\t}\n\t\t}\n\t}\n\n\trenderClass(input: OpenXmlElement, ouput: HTMLElement) {\n\t\tif (input.className)\n\t\t\touput.className = input.className;\n\n\t\tif (input.styleName)\n\t\t\touput.classList.add(this.processStyleName(input.styleName));\n\t}\n\n\tfindStyle(styleName: string) {\n\t\treturn styleName && this.styleMap?.[styleName];\n\t}\n\n\tnumberingClass(id: string, lvl: number) {\n\t\treturn `${this.className}-num-${id}-${lvl}`;\n\t}\n\n\ttabStopClass() {\n\t\treturn `${this.className}-tab-stop`;\n\t}\n\n\tstyleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\n\t\tlet result = `${selectors} {\\r\\n`;\n\n\t\tfor (const key in values) {\n\t\t\tif (key.startsWith('$'))\n\t\t\t\tcontinue;\n\n\t\t\tresult += `  ${key}: ${values[key]};\\r\\n`;\n\t\t}\n\n\t\tif (cssText)\n\t\t\tresult += cssText;\n\n\t\treturn result + \"}\\r\\n\";\n\t}\n\n\tnumberingCounter(id: string, lvl: number) {\n\t\treturn `${this.className}-num-${id}-${lvl}`;\n\t}\n\n\tlevelTextToContent(text: string, suff: string, id: string, numformat: string) {\n\t\tconst suffMap = {\n\t\t\t\"tab\": \"\\\\9\",\n\t\t\t\"space\": \"\\\\a0\",\n\t\t};\n\n\t\tvar result = text.replace(/%\\d*/g, s => {\n\t\t\tlet lvl = parseInt(s.substring(1), 10) - 1;\n\t\t\treturn `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\n\t\t});\n\n\t\treturn `\"${result}${suffMap[suff] ?? \"\"}\"`;\n\t}\n\n\tnumFormatToCssValue(format: string) {\n\t\tvar mapping = {\n\t\t\tnone: \"none\",\n\t\t\tbullet: \"disc\",\n\t\t\tdecimal: \"decimal\",\n\t\t\tlowerLetter: \"lower-alpha\",\n\t\t\tupperLetter: \"upper-alpha\",\n\t\t\tlowerRoman: \"lower-roman\",\n\t\t\tupperRoman: \"upper-roman\",\n\t\t\tdecimalZero: \"decimal-leading-zero\", // 01,02,03,...\n\t\t\t// ordinal: \"\", // 1st, 2nd, 3rd,...\n\t\t\t// ordinalText: \"\", //First, Second, Third, ...\n\t\t\t// cardinalText: \"\", //One,Two Three,...\n\t\t\t// numberInDash: \"\", //-1-,-2-,-3-, ...\n\t\t\t// hex: \"upper-hexadecimal\",\n\t\t\taiueo: \"katakana\",\n\t\t\taiueoFullWidth: \"katakana\",\n\t\t\tchineseCounting: \"simp-chinese-informal\",\n\t\t\tchineseCountingThousand: \"simp-chinese-informal\",\n\t\t\tchineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\n\t\t\tchosung: \"hangul-consonant\",\n\t\t\tideographDigital: \"cjk-ideographic\",\n\t\t\tideographTraditional: \"cjk-heavenly-stem\", // 十天干\n\t\t\tideographLegalTraditional: \"trad-chinese-formal\",\n\t\t\tideographZodiac: \"cjk-earthly-branch\", // 十二地支\n\t\t\tiroha: \"katakana-iroha\",\n\t\t\tirohaFullWidth: \"katakana-iroha\",\n\t\t\tjapaneseCounting: \"japanese-informal\",\n\t\t\tjapaneseDigitalTenThousand: \"cjk-decimal\",\n\t\t\tjapaneseLegal: \"japanese-formal\",\n\t\t\tthaiNumbers: \"thai\",\n\t\t\tkoreanCounting: \"korean-hangul-formal\",\n\t\t\tkoreanDigital: \"korean-hangul-formal\",\n\t\t\tkoreanDigital2: \"korean-hanja-informal\",\n\t\t\thebrew1: \"hebrew\",\n\t\t\thebrew2: \"hebrew\",\n\t\t\thindiNumbers: \"devanagari\",\n\t\t\tganada: \"hangul\",\n\t\t\ttaiwaneseCounting: \"cjk-ideographic\",\n\t\t\ttaiwaneseCountingThousand: \"cjk-ideographic\",\n\t\t\ttaiwaneseDigital:  \"cjk-decimal\",\n\t\t};\n\n\t\treturn mapping[format] ?? format;\n\t}\n\n\trefreshTabStops() {\n\t\tif (!this.options.experimental)\n\t\t\treturn;\n\n\t\tclearTimeout(this.tabsTimeout);\n\n\t\tthis.tabsTimeout = setTimeout(() => {\n\t\t\tconst pixelToPoint = computePixelToPoint();\n\n\t\t\tfor (let tab of this.currentTabs) {\n\t\t\t\tupdateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\n\t\t\t}\n\t\t}, 500);\n\t}\n\n\tcreateElement = createElement;\n}\n\ntype ChildType = Node | string;\n\nfunction createElement<T extends keyof HTMLElementTagNameMap>(\n\ttagName: T,\n\tprops?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>,\n\tchildren?: ChildType[]\n): HTMLElementTagNameMap[T] {\n\treturn createElementNS(undefined, tagName, props, children);\n}\n\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(\n\ttagName: T,\n\tprops?: Partial<Record<keyof SVGElementTagNameMap[T], any>>,\n\tchildren?: ChildType[]\n): SVGElementTagNameMap[T] {\n\treturn createElementNS(ns.svg, tagName, props, children);\n}\n\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: ChildType[]): any {\n\tvar result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\n\tObject.assign(result, props);\n\tchildren && appendChildren(result, children);\n\treturn result;\n}\n\nfunction removeAllElements(elem: HTMLElement) {\n\telem.innerHTML = '';\n}\n\nfunction appendChildren(elem: Element, children: (Node | string)[]) {\n\tchildren.forEach(c => elem.appendChild(isString(c) ? document.createTextNode(c) : c));\n}\n\nfunction createStyleElement(cssText: string) {\n\treturn createElement(\"style\", { innerHTML: cssText });\n}\n\nfunction appendComment(elem: HTMLElement, comment: string) {\n\telem.appendChild(document.createComment(comment));\n}\n\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\n\tvar parent = elem.parent;\n\n\twhile (parent != null && parent.type != type)\n\t\tparent = parent.parent;\n\n\treturn <T>parent;\n}\n","import { Length } from \"./document/common\";\nimport { ParagraphTab } from \"./document/paragraph\";\n\ninterface TabStop {\n\tpos: number;\n\tleader: string;\n\tstyle: string;\n}\n\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\nconst maxTabs = 50;\n\nexport function computePixelToPoint(container: HTMLElement = document.body) {\n\tconst temp = document.createElement(\"div\");\n\ttemp.style.width = '100pt';\n\t\n\tcontainer.appendChild(temp);\n\tconst result = 100 / temp.offsetWidth;\n\tcontainer.removeChild(temp);\n\n\treturn result\n}\n\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\n    const p = elem.closest(\"p\");\n\n    const ebb = elem.getBoundingClientRect();\n    const pbb = p.getBoundingClientRect();\n    const pcs = getComputedStyle(p);\n\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\n\t\tpos: lengthToPoint(t.position),\n\t\tleader: t.leader,\n\t\tstyle: t.style\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\n\n\tconst lastTab = tabStops[tabStops.length - 1];\n\tconst pWidthPt = pbb.width * pixelToPoint;\n\tconst size = lengthToPoint(defaultTabSize);\n    let pos = lastTab.pos + size;\n\n    if (pos < pWidthPt) {\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\n            tabStops.push({ ...defaultTab, pos: pos });\n        }\n    }\n\n    const marginLeft = parseFloat(pcs.marginLeft);\n    const pOffset = pbb.left + marginLeft;\n    const left = (ebb.left - pOffset) * pixelToPoint;\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\n\n    if(tab == null)\n        return;\n\n    let width: number = 1;\n\n    if (tab.style == \"right\" || tab.style == \"center\") {\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\n        const range = document.createRange();\n        range.setStart(elem, 1);\n\n\t\tif (nextIdx < tabStops.length) {\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\n\t\t} else {\n\t\t\trange.setEndAfter(p);\n\t\t}\n\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\n        const nextBB = range.getBoundingClientRect();\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\n\n\t\twidth = tab.pos - offset * pixelToPoint;\n    } else {\n        width = tab.pos - left;\n    }\n\n    elem.innerHTML = \"&nbsp;\";\n    elem.style.textDecoration = \"inherit\";\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\n\n    switch (tab.leader) {\n        case \"dot\":\n        case \"middleDot\":\n            elem.style.textDecoration = \"underline\";\n            elem.style.textDecorationStyle = \"dotted\";\n            break;\n\n        case \"hyphen\":\n        case \"heavy\":\n        case \"underscore\":\n            elem.style.textDecoration = \"underline\";\n            break;\n    }\n}\n\nfunction lengthToPoint(length: Length): number {\n\treturn parseFloat(length);\n}","import { OpenXmlElementBase, DomType } from \"../document/dom\";\n\nexport abstract class WmlBaseNote implements OpenXmlElementBase {\n    type: DomType;\n    id: string;\n\tnoteType: string;\n}\n\nexport class WmlFootnote extends WmlBaseNote {\n\ttype = DomType.Footnote\n}\n\nexport class WmlEndnote extends WmlBaseNote {\n\ttype = DomType.Endnote\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\n\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\n    protected _documentParser: DocumentParser;\n\n    notes: T[]\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n}\n\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path, parser);\n    }\n\n    parseXml(root: Element) {\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\n    }\n}\n\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path, parser);\n    }\n\n    parseXml(root: Element) {\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\n    }\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { IDomNumbering } from \"../document/dom\";\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\n\nexport class NumberingPart extends Part implements NumberingPartProperties {\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    numberings: Numbering[];\n    abstractNumberings: AbstractNumbering[];\n    bulletPictures: NumberingBulletPicture[];\n    \n    domNumberings: IDomNumbering[];\n\n    parseXml(root: Element) {\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \n    }\n}","import { NumberingPicBullet } from \"../document/dom\";\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\nimport { parseRunProperties, RunProperties } from \"../document/run\";\nimport { XmlParser } from \"../parser/xml-parser\";\n\nexport interface NumberingPartProperties {\n    numberings: Numbering[];\n    abstractNumberings: AbstractNumbering[];\n    bulletPictures: NumberingBulletPicture[];\n}\n\nexport interface Numbering {\n    id: string;\n    abstractId: string;\n    overrides: NumberingLevelOverride[];\n}\n\nexport interface NumberingLevelOverride {\n    level: number;\n    start: number;\n    numberingLevel: NumberingLevel;\n}\n\nexport interface AbstractNumbering {\n    id: string;\n    name: string;\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\n    levels: NumberingLevel[];\n    numberingStyleLink: string;\n    styleLink: string;\n}\n\nexport interface NumberingLevel {\n    level: number;\n    start: string;\n    restart: number;\n    format: 'lowerRoman' | 'lowerLetter' | string;\n    text: string;\n    justification: string;\n    bulletPictureId: string;\n    paragraphStyle: string;\n    paragraphProps: ParagraphProperties;\n    runProps: RunProperties;\n}\n\nexport interface NumberingBulletPicture {\n    id: string;\n    referenceId: string;\n    style: string;\n}\n\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\n    let result: NumberingPartProperties = {\n        numberings: [],\n        abstractNumberings: [],\n        bulletPictures: []\n    }\n    \n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"num\":\n                result.numberings.push(parseNumbering(e, xml));\n                break;\n            case \"abstractNum\":\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\n                break;\n            case \"numPicBullet\":\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\n    let result = <Numbering>{\n        id: xml.attr(elem, 'numId'),\n        overrides: []\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"abstractNumId\":\n                result.abstractId = xml.attr(e, \"val\");\n                break;\n            case \"lvlOverride\":\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\n    let result = <AbstractNumbering>{\n        id: xml.attr(elem, 'abstractNumId'),\n        levels: []\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"name\":\n                result.name = xml.attr(e, \"val\");\n                break;\n            case \"multiLevelType\":\n                result.multiLevelType = xml.attr(e, \"val\");\n                break;\n            case \"numStyleLink\":\n                result.numberingStyleLink = xml.attr(e, \"val\");\n                break;\n            case \"styleLink\":\n                result.styleLink = xml.attr(e, \"val\");\n                break;\n            case \"lvl\":\n                result.levels.push(parseNumberingLevel(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\n    let result = <NumberingLevel>{\n        level: xml.intAttr(elem, 'ilvl')\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"start\":\n                result.start = xml.attr(e, \"val\");\n                break;\n            case \"lvlRestart\":\n                result.restart = xml.intAttr(e, \"val\");\n                break;\n            case \"numFmt\":\n                result.format = xml.attr(e, \"val\");\n                break;\n            case \"lvlText\":\n                result.text = xml.attr(e, \"val\");\n                break;\n            case \"lvlJc\":\n                result.justification = xml.attr(e, \"val\");\n                break;\n            case \"lvlPicBulletId\":\n                result.bulletPictureId = xml.attr(e, \"val\");\n                break;\n            case \"pStyle\":\n                result.paragraphStyle = xml.attr(e, \"val\");\n                break;\n            case \"pPr\":\n                result.paragraphProps = parseParagraphProperties(e, xml);\n                break;\n            case \"rPr\":\n                result.runProps = parseRunProperties(e, xml);\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\n    let result = <NumberingLevelOverride>{\n        level: xml.intAttr(elem, 'ilvl')\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"startOverride\":\n                result.start = xml.intAttr(e, \"val\");\n                break;\n            case \"lvl\":\n                result.numberingLevel = parseNumberingLevel(e, xml);\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\n    //TODO\n    var pict = xml.element(elem, \"pict\");\n    var shape = pict && xml.element(pict, \"shape\");\n    var imagedata = shape && xml.element(shape, \"imagedata\");\n\n    return imagedata ? {\n        id: xml.attr(elem, \"numPicBulletId\"),\n        referenceId: xml.attr(imagedata, \"id\"),\n        style: xml.attr(shape, \"style\")\n    } : null;\n}","import { Length,  LengthUsage, LengthUsageType, convertLength, convertBoolean  } from \"../document/common\";\n\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\n    if (trimXmlDeclaration)\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\n        \n    xmlString = removeUTF8BOM(xmlString);\n    \n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \n    const errorText = hasXmlParserError(result);\n\n    if (errorText)\n        throw new Error(errorText);\n\n    return result;\n}\n\nfunction hasXmlParserError(doc: Document) {\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\n}\n\nfunction removeUTF8BOM(data: string) {\n    return data.charCodeAt(0) === 0xFEFF ? data.substring(1) : data;\n}\n\nexport function serializeXmlString(elem: Node): string {\n    return new XMLSerializer().serializeToString(elem);\n}\n\nexport class XmlParser {\n    elements(elem: Element, localName: string = null): Element[] {\n        const result = [];\n\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\n            let c = elem.childNodes.item(i);\n\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\n                result.push(c);\n        }\n\n        return result;\n    }\n\n    element(elem: Element, localName: string): Element {\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\n            let c = elem.childNodes.item(i);\n\n            if (c.nodeType == 1 && (c as Element).localName == localName)\n                return c as Element;\n        }\n\n        return null;\n    }\n\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\n        var el = this.element(elem, localName);\n        return el ? this.attr(el, attrLocalName) : undefined;\n    }\n\n\tattrs(elem: Element) {\n\t\treturn Array.from(elem.attributes);\n\t}\n\n    attr(elem: Element, localName: string): string {\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\n            let a = elem.attributes.item(i);\n\n            if (a.localName == localName)\n                return a.value;\n        }\n\n        return null;\n    }\n\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseInt(val) : defaultValue;\n    }\n\n\thexAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseInt(val, 16) : defaultValue;\n    }\n\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseFloat(val) : defaultValue;\n    }\n\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\n        return convertBoolean(this.attr(node, attrName), defaultValue);\n    }\n\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\n        return convertLength(this.attr(node, attrName), usage);\n    }\n}\n\nconst globalXmlParser = new XmlParser();\n\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { WmlSettings, parseSettings } from \"./settings\";\n\nexport class SettingsPart extends Part {\n\tsettings: WmlSettings;\n\n\tconstructor(pkg: OpenXmlPackage, path: string) {\n\t\tsuper(pkg, path);\n\t}\n\n\tparseXml(root: Element) {\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\n\t}\n}","import { DocumentParser } from \"../document-parser\";\nimport { Length } from \"../document/common\";\nimport { XmlParser } from \"../parser/xml-parser\";\n\nexport interface WmlSettings {\n\tdefaultTabStop: Length;\n\tfootnoteProps: NoteProperties;\n\tendnoteProps: NoteProperties;\n\tautoHyphenation: boolean;\n}\n\nexport interface NoteProperties {\n\tnummeringFormat: string;\n\tdefaultNoteIds: string[];\n}\n\nexport function parseSettings(elem: Element, xml: XmlParser) {\n\tvar result = {} as WmlSettings; \n\n\tfor (let el of xml.elements(elem)) {\n\t\tswitch(el.localName) {\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\n\t\t}\n\t}\n\n    return result;\n}\n\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\n\tvar result = {\n\t\tdefaultNoteIds: []\n\t} as NoteProperties; \n\n\tfor (let el of xml.elements(elem)) {\n\t\tswitch(el.localName) {\n\t\t\tcase \"numFmt\": \n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"footnote\": \n\t\t\tcase \"endnote\": \n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n    return result;\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { IDomStyle } from \"../document/style\";\n\nexport class StylesPart extends Part {\n    styles: IDomStyle[];\n\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    parseXml(root: Element) {\n        this.styles = this._documentParser.parseStylesFile(root);     \n    }\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DmlTheme, parseTheme } from \"./theme\";\n\nexport class ThemePart extends Part {\n    theme: DmlTheme;\n\n    constructor(pkg: OpenXmlPackage, path: string) {\n        super(pkg, path);\n    }\n\n    parseXml(root: Element) {\n        this.theme = parseTheme(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport class DmlTheme {\n    colorScheme: DmlColorScheme;\n    fontScheme: DmlFontScheme;\n}\n\nexport interface DmlColorScheme {\n    name: string;\n    colors: Record<string, string>;\n}\n\nexport interface DmlFontScheme {\n    name: string;\n    majorFont: DmlFormInfo,\n    minorFont: DmlFormInfo\n}\n\nexport interface DmlFormInfo {\n    latinTypeface: string;\n    eaTypeface: string;\n    csTypeface: string;\n}\n\nexport function parseTheme(elem: Element, xml: XmlParser) {\n    var result = new DmlTheme();\n    var themeElements = xml.element(elem, \"themeElements\");\n\n    for (let el of xml.elements(themeElements)) {\n        switch(el.localName) {\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\n    var result: DmlColorScheme = { \n        name: xml.attr(elem, \"name\"),\n        colors: {}\n    };\n\n    for (let el of xml.elements(elem)) {\n        var srgbClr = xml.element(el, \"srgbClr\");\n        var sysClr = xml.element(el, \"sysClr\");\n\n        if (srgbClr) {\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\n        }\n        else if (sysClr) {\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\n        }\n    }\n\n    return result;\n}\n\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\n    var result: DmlFontScheme = { \n        name: xml.attr(elem, \"name\"),\n    } as DmlFontScheme;\n\n    for (let el of xml.elements(elem)) {\n        switch (el.localName) {\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\n    return {\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\n    };\n}","export function escapeClassName(className: string) {\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\n}\n\nexport function splitPath(path: string): [string, string] {\n    let si = path.lastIndexOf('/') + 1;\n    let folder = si == 0 ? \"\" : path.substring(0, si);\n    let fileName = si == 0 ? path : path.substring(si);\n\n    return [folder, fileName];\n}\n\nexport function resolvePath(path: string, base: string): string {\n    try {\n        const prefix = \"http://docx/\";\n        const url = new URL(path, prefix + base).toString();\n        return url.substring(prefix.length);\n    } catch {\n        return `${base}${path}`;\n    }\n}\n\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\n    return array.reduce((a, x) => {\n        a[by(x)] = x;\n        return a;\n    }, {});\n}\n\nexport function blobToBase64(blob: Blob): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onloadend = () => resolve(reader.result as string);\n\t\treader.onerror = () => reject();\n\t\treader.readAsDataURL(blob);\n\t});\n}\n\nexport function isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function isString(item: unknown): item is string {\n    return typeof item === 'string' || item instanceof String;\n}\n\nexport function mergeDeep(target, ...sources) {\n    if (!sources.length) \n        return target;\n    \n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                const val = target[key] ?? (target[key] = {});\n                mergeDeep(val, source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n}\n\nexport function parseCssRules(text: string): Record<string, string> {\n\tconst result: Record<string, string> = {};\n\n\tfor (const rule of text.split(';')) {\n\t\tconst [key, val] = rule.split(':');\n\t\tresult[key] = val;\n\t}\n\n\treturn result\n}\n\nexport function formatCssRules(style: Record<string, string>): string {\n\treturn Object.entries(style).map((k, v) => `${k}: ${v}`).join(';');\n}\n\nexport function asArray<T>(val: T | T[]): T[] {\n\treturn Array.isArray(val) ? val : [val];\n}","import { DocumentParser } from '../document-parser';\nimport { convertLength, LengthUsage } from '../document/common';\nimport { OpenXmlElementBase, DomType } from '../document/dom';\nimport xml from '../parser/xml-parser';\nimport { formatCssRules, parseCssRules } from '../utils';\n\nexport class VmlElement extends OpenXmlElementBase {\n\ttype: DomType = DomType.VmlElement;\n\ttagName: string;\n\tcssStyleText?: string;\n\tattrs: Record<string, string> = {};\n\twrapType?: string;\n\timageHref?: {\n\t\tid: string,\n\t\ttitle: string\n\t}\n}\n\nexport function parseVmlElement(elem: Element, parser: DocumentParser): VmlElement {\n\tvar result = new VmlElement();\n\n\tswitch (elem.localName) {\n\t\tcase \"rect\":\n\t\t\tresult.tagName = \"rect\"; \n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\n\t\t\tbreak;\n\n\t\tcase \"oval\":\n\t\t\tresult.tagName = \"ellipse\"; \n\t\t\tObject.assign(result.attrs, { cx: \"50%\", cy: \"50%\", rx: \"50%\", ry: \"50%\" });\n\t\t\tbreak;\n\t\n\t\tcase \"line\":\n\t\t\tresult.tagName = \"line\"; \n\t\t\tbreak;\n\n\t\tcase \"shape\":\n\t\t\tresult.tagName = \"g\"; \n\t\t\tbreak;\n\n\t\tcase \"textbox\":\n\t\t\tresult.tagName = \"foreignObject\"; \n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\n\t\t\tbreak;\n\t\n\t\tdefault:\n\t\t\treturn null;\n\t}\n\n\tfor (const at of xml.attrs(elem)) {\n\t\tswitch(at.localName) {\n\t\t\tcase \"style\": \n\t\t\t\tresult.cssStyleText = at.value;\n\t\t\t\tbreak;\n\n\t\t\tcase \"fillcolor\": \n\t\t\t\tresult.attrs.fill = at.value; \n\t\t\t\tbreak;\n\n\t\t\tcase \"from\":\n\t\t\t\tconst [x1, y1] = parsePoint(at.value);\n\t\t\t\tObject.assign(result.attrs, { x1, y1 });\n\t\t\t\tbreak;\n\n\t\t\tcase \"to\":\n\t\t\t\tconst [x2, y2] = parsePoint(at.value);\n\t\t\t\tObject.assign(result.attrs, { x2, y2 });\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (const el of xml.elements(elem)) {\n\t\tswitch (el.localName) {\n\t\t\tcase \"stroke\": \n\t\t\t\tObject.assign(result.attrs, parseStroke(el));\n\t\t\t\tbreak;\n\n\t\t\tcase \"fill\": \n\t\t\t\tObject.assign(result.attrs, parseFill(el));\n\t\t\t\tbreak;\n\n\t\t\tcase \"imagedata\":\n\t\t\t\tresult.tagName = \"image\";\n\t\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\n\t\t\t\tresult.imageHref = {\n\t\t\t\t\tid: xml.attr(el, \"id\"),\n\t\t\t\t\ttitle: xml.attr(el, \"title\"),\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"txbxContent\": \n\t\t\t\tresult.children.push(...parser.parseBodyElements(el));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconst child = parseVmlElement(el, parser);\n\t\t\t\tchild && result.children.push(child);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction parseStroke(el: Element): Record<string, string> {\n\treturn {\n\t\t'stroke': xml.attr(el, \"color\"),\n\t\t'stroke-width': xml.lengthAttr(el, \"weight\", LengthUsage.Emu) ?? '1px'\n\t};\n}\n\nfunction parseFill(el: Element): Record<string, string> {\n\treturn {\n\t\t//'fill': xml.attr(el, \"color2\")\n\t};\n}\n\nfunction parsePoint(val: string): string[] {\n\treturn val.split(\",\");\n}\n\nfunction convertPath(path: string): string {\n\treturn path.replace(/([mlxe])|([-\\d]+)|([,])/g, (m) => {\n\t\tif (/[-\\d]/.test(m)) return convertLength(m,  LengthUsage.VmlEmu);\n\t\tif (/[ml,]/.test(m)) return m;\n\n\t\treturn '';\n\t});\n}","import { OutputType } from \"jszip\";\n\nimport { DocumentParser } from './document-parser';\nimport { Relationship, RelationshipTypes } from './common/relationship';\nimport { Part } from './common/part';\nimport { FontTablePart } from './font-table/font-table';\nimport { OpenXmlPackage } from './common/open-xml-package';\nimport { DocumentPart } from './document/document-part';\nimport { blobToBase64, resolvePath, splitPath } from './utils';\nimport { NumberingPart } from './numbering/numbering-part';\nimport { StylesPart } from './styles/styles-part';\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\nimport { CorePropsPart } from \"./document-props/core-props-part\";\nimport { ThemePart } from \"./theme/theme-part\";\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\nimport { SettingsPart } from \"./settings/settings-part\";\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\n\nconst topLevelRels = [\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\n];\n\nexport class WordDocument {\n\tprivate _package: OpenXmlPackage;\n\tprivate _parser: DocumentParser;\n\tprivate _options: any;\n\n\trels: Relationship[];\n\tparts: Part[] = [];\n\tpartsMap: Record<string, Part> = {};\n\n\tdocumentPart: DocumentPart;\n\tfontTablePart: FontTablePart;\n\tnumberingPart: NumberingPart;\n\tstylesPart: StylesPart;\n\tfootnotesPart: FootnotesPart;\n\tendnotesPart: EndnotesPart;\n\tthemePart: ThemePart;\n\tcorePropsPart: CorePropsPart;\n\textendedPropsPart: ExtendedPropsPart;\n\tsettingsPart: SettingsPart;\n\n\tstatic async load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument> {\n\t\tvar d = new WordDocument();\n\n\t\td._options = options;\n\t\td._parser = parser;\n\t\td._package = await OpenXmlPackage.load(blob, options);\n\t\td.rels = await d._package.loadRelationships();\n\n\t\tawait Promise.all(topLevelRels.map(rel => {\n\t\t\tconst r = d.rels.find(x => x.type === rel.type) ?? rel; //fallback                    \n\t\t\treturn d.loadRelationshipPart(r.target, r.type);\n\t\t}));\n\n\t\treturn d;\n\t}\n\n\tsave(type = \"blob\"): Promise<any> {\n\t\treturn this._package.save(type);\n\t}\n\n\tprivate async loadRelationshipPart(path: string, type: string): Promise<Part> {\n\t\tif (this.partsMap[path])\n\t\t\treturn this.partsMap[path];\n\n\t\tif (!this._package.get(path))\n\t\t\treturn null;\n\n\t\tlet part: Part = null;\n\n\t\tswitch (type) {\n\t\t\tcase RelationshipTypes.OfficeDocument:\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.FontTable:\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Numbering:\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Styles:\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Theme:\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Footnotes:\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Endnotes:\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Footer:\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Header:\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.CoreProperties:\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.ExtendedProperties:\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.CustomProperties:\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\n\t\t\t\tbreak;\n\t\n\t\t\tcase RelationshipTypes.Settings:\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (part == null)\n\t\t\treturn Promise.resolve(null);\n\n\t\tthis.partsMap[path] = part;\n\t\tthis.parts.push(part);\n\n\t\tawait part.load();\n\n\t\tif (part.rels?.length > 0) {\n\t\t\tconst [folder] = splitPath(part.path);\n\t\t\tawait Promise.all(part.rels.map(rel => this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)));\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tasync loadDocumentImage(id: string, part?: Part): Promise<string> {\n\t\tconst x = await this.loadResource(part ?? this.documentPart, id, \"blob\");\n\t\treturn this.blobToURL(x);\n\t}\n\n\tasync loadNumberingImage(id: string): Promise<string> {\n\t\tconst x = await this.loadResource(this.numberingPart, id, \"blob\");\n\t\treturn this.blobToURL(x);\n\t}\n\n\tasync loadFont(id: string, key: string): Promise<string> {\n\t\tconst x = await this.loadResource(this.fontTablePart, id, \"uint8array\");\n\t\treturn x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x;\n\t}\n\n\tprivate blobToURL(blob: Blob): string | Promise<string> {\n\t\tif (!blob)\n\t\t\treturn null;\n\n\t\tif (this._options.useBase64URL) {\n\t\t\treturn blobToBase64(blob);\n\t\t}\n\n\t\treturn URL.createObjectURL(blob);\n\t}\n\n\tfindPartByRelId(id: string, basePart: Part = null) {\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\n\t}\n\n\tgetPathById(part: Part, id: string): string {\n\t\tconst rel = part.rels.find(x => x.id == id);\n\t\tconst [folder] = splitPath(part.path);\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\n\t}\n\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\n\t\tconst path = this.getPathById(part, id);\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\n\t}\n}\n\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\n\tconst len = 16;\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\n\tconst numbers = new Array(len);\n\n\tfor (let i = 0; i < len; i++)\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\n\n\tfor (let i = 0; i < 32; i++)\n\t\tdata[i] = data[i] ^ numbers[i % len]\n\n\treturn data;\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["root","factory","exports","module","require","define","amd","globalThis","__WEBPACK_EXTERNAL_MODULE__626__","OpenXmlPackage","constructor","_zip","options","xmlParser","XmlParser","get","path","this","files","startsWith","substr","normalizePath","update","content","file","static","input","zip","JSZip","loadAsync","save","type","generateAsync","load","async","Promise","resolve","relsPath","f","fn","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","rels","loadRelationships","xmlText","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","RelationshipTypes","xml","elements","map","e","id","attr","target","targetMode","autos","shd","color","borderColor","highlight","supportedNamespaceURIs","mmlTagMap","DomType","MmlMath","MmlMathParagraph","MmlFraction","MmlFunction","MmlFunctionName","MmlNumerator","MmlDenominator","MmlRadical","MmlDegree","MmlBase","MmlSuperscript","MmlSubscript","MmlPreSubSuper","MmlSuperArgument","MmlSubArgument","MmlDelimiter","MmlNary","MmlEquationArray","MmlLimit","MmlLimitLower","MmlMatrix","MmlMatrixRow","MmlBox","MmlBar","MmlGroupChar","ignoreWidth","debug","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","push","parseDocumentFile","xbody","element","background","sectPr","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","localName","parseParagraph","parseTable","parseSdt","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","s","parseTableStyle","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","start","pStyleName","undefined","pStyle","rStyle","suff","bullet","find","levelText","format","parser","sdtContent","parseInserted","parentParser","Inserted","parseDeleted","Deleted","Paragraph","parseRun","parseHyperlink","parseBookmarkStart","parseBookmarkEnd","parseMathElement","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","relId","href","Run","checkAlternateContent","Text","text","textContent","DeletedText","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","Break","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","parseVmlPicture","propsTag","run","MmlRun","parseMathProperies","verticalJustification","position","hideDegree","beginChar","endChar","verticalAlign","valueOfVertAlign","VmlPicture","child","parseVmlElement","choice","requires","namespaceURI","lookupNamespaceURI","includes","parseDrawingWrapper","Drawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","isHeader","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","val","col","fonts","themeValue","filter","join","length","firstLine","hanging","left","right","end","before","after","line","lineRule","toFixed","output","knownColors","cb","i","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","themeColor","Dxa","convertLength","Percent","Border","_","asTagName","a","b","hexAttr","trim","CorePropsPart","Part","parseCoreProps","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","CustomPropsPart","parseCustomProps","firstChild","formatId","nodeName","value","ExtendedPropsPart","parseExtendedProps","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","size","Point","frame","shadow","top","bottom","ns","wordml","drawingml","picture","compatibility","math","mul","unit","LineHeight","VmlEmu","usage","test","num","Math","max","defaultValue","fontSize","DocumentPart","pkg","super","_documentParser","body","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","leader","parseRunProperty","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","SectionType","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","defaultOptions","ignoreHeight","ignoreFonts","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","useBase64URL","renderChanges","data","userOptions","ops","WordDocument","DocumentParser","bodyContainer","styleContainer","renderer","HtmlRenderer","window","document","doc","render","FontTablePart","parseFonts","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","WmlHeader","OpenXmlElementBase","Header","WmlFooter","Footer","BaseHeaderFooterPart","rootElement","createRootElement","svg","mathML","createElement","tagName","createElementNS","createSvgElement","Object","assign","appendChildren","removeAllElements","innerHTML","appendChild","isString","createTextNode","createStyleElement","cssText","appendComment","comment","createComment","htmlDocument","styleMap","currentPart","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","rootSelector","renderDefaultStyle","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","prodessNumberings","domNumberings","renderNumbering","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","fontTablePart","renderFontTable","sectionElements","renderSections","documentPart","renderWrapper","refreshTabStops","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","k","entries","colors","styleToString","fontsPart","ref","loadFont","then","fontData","cssValues","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","numberings","findStyle","processElement","processTable","r","attrs","getOwnPropertyNames","hasOwnProperty","createSection","paddingLeft","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","sections","splitBySection","prevProps","l","currentFootnoteIds","sectProps","sectionElement","renderStyleValues","renderHeaderFooter","contentElement","renderElements","renderNotes","refs","page","firstOfSection","into","part","findPartByRelId","isPageBreakElement","current","p","pBreakIndex","rBreakIndex","findIndex","bind","breakRun","splitRun","newParagraph","slice","runChildren","newRun","currentSectProps","styleText","resetCounters","numberingClass","listStyleType","valiable","toLowerCase","loadNumberingImage","counter","numberingCounter","counterReset","levelTextToContent","numFormatToCssValue","defautStyles","subStyles","linkedStyle","concat","subStyle","noteIds","notesMap","renderElement","renderParagraph","renderBookmarkStart","renderRun","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderText","renderDeletedText","renderTab","renderSymbol","renderBreak","renderContainer","Footnote","Endnote","renderFootnoteReference","renderEndnoteReference","renderVmlPicture","VmlElement","renderVmlElement","renderContainerNS","xmlns","renderMmlGroupChar","renderMmlRadical","renderMmlDelimiter","renderMmlRun","renderMmlNary","renderMmlPreSubSuper","renderMmlBar","renderMllList","renderInserted","renderDeleted","renderChildren","elems","flatMap","renderClass","renderCommonProperties","classList","add","renderRunProperties","rel","it","display","textIndent","loadDocumentImage","fontFamily","tabSpan","tabStopClass","stops","findParent","wrapper","renderTableColumns","pop","colElem","rowSpan","colSpan","container","setAttribute","cssStyleText","renderVmlChildElement","imageHref","requestAnimationFrame","bb","getBBox","ceil","y","asArray","base","degree","grouped","sup","sub","supElem","subElem","charElem","stubElem","textDecoration","ouput","lvl","selectors","numformat","replace","substring","none","decimal","lowerLetter","upperLetter","lowerRoman","upperRoman","decimalZero","aiueo","aiueoFullWidth","chineseCounting","chineseCountingThousand","chineseLegalSimplified","chosung","ideographDigital","ideographTraditional","ideographLegalTraditional","ideographZodiac","iroha","irohaFullWidth","japaneseCounting","japaneseDigitalTenThousand","japaneseLegal","thaiNumbers","koreanCounting","koreanDigital","koreanDigital2","hebrew1","hebrew2","hindiNumbers","ganada","taiwaneseCounting","taiwaneseCountingThousand","taiwaneseDigital","clearTimeout","setTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","defaultTab","lengthToPoint","parseFloat","temp","offsetWidth","removeChild","closest","ebb","getBoundingClientRect","pbb","pcs","getComputedStyle","tabStops","t","sort","lastTab","pWidthPt","marginLeft","pOffset","Array","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","wordSpacing","textDecorationStyle","WmlBaseNote","BaseNotePart","WmlFootnote","WmlEndnote","NumberingPart","parseNumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","charCodeAt","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","item","attrLocalName","attributes","floatAttr","convertBoolean","globalXmlParser","SettingsPart","parseSettings","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","ThemePart","parseTheme","DmlTheme","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","themeElements","isObject","isArray","si","lastIndexOf","prefix","URL","toString","array","by","reduce","blob","reject","reader","FileReader","onloadend","onerror","readAsDataURL","String","sources","source","shift","rule","parseStroke","parsePoint","cx","cy","rx","ry","at","fill","x1","y1","x2","y2","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","all","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","FootnotesPart","Endnotes","EndnotesPart","FooterPart","HeaderPart","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}